#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Denna kod har genererats av ett verktyg.
//     Körtidsversion:4.0.30319.42000
//
//     Ändringar i denna fil kan orsaka fel och kommer att förloras om
//     koden återgenereras.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="librarydb")]
public partial class Librarydb : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAffiliation(Affiliation instance);
  partial void UpdateAffiliation(Affiliation instance);
  partial void DeleteAffiliation(Affiliation instance);
  partial void InsertArticle(Article instance);
  partial void UpdateArticle(Article instance);
  partial void DeleteArticle(Article instance);
  partial void InsertArticleCrossrefSubject(ArticleCrossrefSubject instance);
  partial void UpdateArticleCrossrefSubject(ArticleCrossrefSubject instance);
  partial void DeleteArticleCrossrefSubject(ArticleCrossrefSubject instance);
  partial void InsertArticleEvolangSubject(ArticleEvolangSubject instance);
  partial void UpdateArticleEvolangSubject(ArticleEvolangSubject instance);
  partial void DeleteArticleEvolangSubject(ArticleEvolangSubject instance);
  partial void InsertArticlePubmedSubject(ArticlePubmedSubject instance);
  partial void UpdateArticlePubmedSubject(ArticlePubmedSubject instance);
  partial void DeleteArticlePubmedSubject(ArticlePubmedSubject instance);
  partial void InsertArticleReference(ArticleReference instance);
  partial void UpdateArticleReference(ArticleReference instance);
  partial void DeleteArticleReference(ArticleReference instance);
  partial void InsertAuthor(Author instance);
  partial void UpdateAuthor(Author instance);
  partial void DeleteAuthor(Author instance);
  partial void InsertAuthoraffiliation(Authoraffiliation instance);
  partial void UpdateAuthoraffiliation(Authoraffiliation instance);
  partial void DeleteAuthoraffiliation(Authoraffiliation instance);
  partial void InsertAuthorAlias(AuthorAlias instance);
  partial void UpdateAuthorAlias(AuthorAlias instance);
  partial void DeleteAuthorAlias(AuthorAlias instance);
  partial void InsertAuthorArticle(AuthorArticle instance);
  partial void UpdateAuthorArticle(AuthorArticle instance);
  partial void DeleteAuthorArticle(AuthorArticle instance);
  partial void InsertAuthorBook(AuthorBook instance);
  partial void UpdateAuthorBook(AuthorBook instance);
  partial void DeleteAuthorBook(AuthorBook instance);
  partial void InsertAuthorChapter(AuthorChapter instance);
  partial void UpdateAuthorChapter(AuthorChapter instance);
  partial void DeleteAuthorChapter(AuthorChapter instance);
  partial void InsertAuthorSubject(AuthorSubject instance);
  partial void UpdateAuthorSubject(AuthorSubject instance);
  partial void DeleteAuthorSubject(AuthorSubject instance);
  partial void InsertBookAlbum(BookAlbum instance);
  partial void UpdateBookAlbum(BookAlbum instance);
  partial void DeleteBookAlbum(BookAlbum instance);
  partial void InsertBookmusictype(Bookmusictype instance);
  partial void UpdateBookmusictype(Bookmusictype instance);
  partial void DeleteBookmusictype(Bookmusictype instance);
  partial void InsertChapterSong(ChapterSong instance);
  partial void UpdateChapterSong(ChapterSong instance);
  partial void DeleteChapterSong(ChapterSong instance);
  partial void InsertCrossrefSubject(CrossrefSubject instance);
  partial void UpdateCrossrefSubject(CrossrefSubject instance);
  partial void DeleteCrossrefSubject(CrossrefSubject instance);
  partial void InsertEvolang(Evolang instance);
  partial void UpdateEvolang(Evolang instance);
  partial void DeleteEvolang(Evolang instance);
  partial void InsertEvolangAuthor(EvolangAuthor instance);
  partial void UpdateEvolangAuthor(EvolangAuthor instance);
  partial void DeleteEvolangAuthor(EvolangAuthor instance);
  partial void InsertEvolangSubject(EvolangSubject instance);
  partial void UpdateEvolangSubject(EvolangSubject instance);
  partial void DeleteEvolangSubject(EvolangSubject instance);
  partial void InsertJournal(Journal instance);
  partial void UpdateJournal(Journal instance);
  partial void DeleteJournal(Journal instance);
  partial void InsertPublisher(Publisher instance);
  partial void UpdatePublisher(Publisher instance);
  partial void DeletePublisher(Publisher instance);
  partial void InsertPubmedSubject(PubmedSubject instance);
  partial void UpdatePubmedSubject(PubmedSubject instance);
  partial void DeletePubmedSubject(PubmedSubject instance);
  partial void InsertPubmedSubjectrelation(PubmedSubjectrelation instance);
  partial void UpdatePubmedSubjectrelation(PubmedSubjectrelation instance);
  partial void DeletePubmedSubjectrelation(PubmedSubjectrelation instance);
  partial void InsertRef(Ref instance);
  partial void UpdateRef(Ref instance);
  partial void DeleteRef(Ref instance);
  partial void InsertSubject(Subject instance);
  partial void UpdateSubject(Subject instance);
  partial void DeleteSubject(Subject instance);
  partial void InsertSubjectrelation(Subjectrelation instance);
  partial void UpdateSubjectrelation(Subjectrelation instance);
  partial void DeleteSubjectrelation(Subjectrelation instance);
  #endregion
	
	public Librarydb(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Librarydb(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Librarydb(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Librarydb(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Affiliation> Affiliation
	{
		get
		{
			return this.GetTable<Affiliation>();
		}
	}
	
	public System.Data.Linq.Table<Article> Article
	{
		get
		{
			return this.GetTable<Article>();
		}
	}
	
	public System.Data.Linq.Table<ArticleCrossrefSubject> ArticleCrossrefSubject
	{
		get
		{
			return this.GetTable<ArticleCrossrefSubject>();
		}
	}
	
	public System.Data.Linq.Table<ArticleEvolangSubject> ArticleEvolangSubject
	{
		get
		{
			return this.GetTable<ArticleEvolangSubject>();
		}
	}
	
	public System.Data.Linq.Table<ArticlePubmedSubject> ArticlePubmedSubject
	{
		get
		{
			return this.GetTable<ArticlePubmedSubject>();
		}
	}
	
	public System.Data.Linq.Table<ArticleReference> ArticleReference
	{
		get
		{
			return this.GetTable<ArticleReference>();
		}
	}
	
	public System.Data.Linq.Table<Author> Author
	{
		get
		{
			return this.GetTable<Author>();
		}
	}
	
	public System.Data.Linq.Table<Authoraffiliation> Authoraffiliation
	{
		get
		{
			return this.GetTable<Authoraffiliation>();
		}
	}
	
	public System.Data.Linq.Table<AuthorAlias> AuthorAlias
	{
		get
		{
			return this.GetTable<AuthorAlias>();
		}
	}
	
	public System.Data.Linq.Table<AuthorArticle> AuthorArticle
	{
		get
		{
			return this.GetTable<AuthorArticle>();
		}
	}
	
	public System.Data.Linq.Table<AuthorBook> AuthorBook
	{
		get
		{
			return this.GetTable<AuthorBook>();
		}
	}
	
	public System.Data.Linq.Table<AuthorChapter> AuthorChapter
	{
		get
		{
			return this.GetTable<AuthorChapter>();
		}
	}
	
	public System.Data.Linq.Table<AuthorSubject> AuthorSubject
	{
		get
		{
			return this.GetTable<AuthorSubject>();
		}
	}
	
	public System.Data.Linq.Table<BookAlbum> BookAlbum
	{
		get
		{
			return this.GetTable<BookAlbum>();
		}
	}
	
	public System.Data.Linq.Table<Bookmusictype> Bookmusictype
	{
		get
		{
			return this.GetTable<Bookmusictype>();
		}
	}
	
	public System.Data.Linq.Table<ChapterSong> ChapterSong
	{
		get
		{
			return this.GetTable<ChapterSong>();
		}
	}
	
	public System.Data.Linq.Table<CrossrefSubject> CrossrefSubject
	{
		get
		{
			return this.GetTable<CrossrefSubject>();
		}
	}
	
	public System.Data.Linq.Table<Evolang> Evolang
	{
		get
		{
			return this.GetTable<Evolang>();
		}
	}
	
	public System.Data.Linq.Table<EvolangAuthor> EvolangAuthor
	{
		get
		{
			return this.GetTable<EvolangAuthor>();
		}
	}
	
	public System.Data.Linq.Table<EvolangSubject> EvolangSubject
	{
		get
		{
			return this.GetTable<EvolangSubject>();
		}
	}
	
	public System.Data.Linq.Table<Journal> Journal
	{
		get
		{
			return this.GetTable<Journal>();
		}
	}
	
	public System.Data.Linq.Table<Publisher> Publisher
	{
		get
		{
			return this.GetTable<Publisher>();
		}
	}
	
	public System.Data.Linq.Table<PubmedSubject> PubmedSubject
	{
		get
		{
			return this.GetTable<PubmedSubject>();
		}
	}
	
	public System.Data.Linq.Table<PubmedSubjectrelation> PubmedSubjectrelation
	{
		get
		{
			return this.GetTable<PubmedSubjectrelation>();
		}
	}
	
	public System.Data.Linq.Table<Ref> Ref
	{
		get
		{
			return this.GetTable<Ref>();
		}
	}
	
	public System.Data.Linq.Table<Subject> Subject
	{
		get
		{
			return this.GetTable<Subject>();
		}
	}
	
	public System.Data.Linq.Table<Subjectrelation> Subjectrelation
	{
		get
		{
			return this.GetTable<Subjectrelation>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Affiliation")]
public partial class Affiliation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Fullstring;
	
	private System.Nullable<int> _Partof;
	
	private EntityRef<Affiliation> _PartofAffiliation;
	
	private EntitySet<Affiliation> @__Affiliati__Parto__42ACE4D4;
	
	private EntitySet<Authoraffiliation> _Authoraffiliation;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFullstringChanging(string value);
    partial void OnFullstringChanged();
    partial void OnPartofChanging(System.Nullable<int> value);
    partial void OnPartofChanged();
    #endregion
	
	public Affiliation()
	{
		this._PartofAffiliation = default(EntityRef<Affiliation>);
		this.@__Affiliati__Parto__42ACE4D4 = new EntitySet<Affiliation>(new Action<Affiliation>(this.attach__Affiliati__Parto__42ACE4D4), new Action<Affiliation>(this.detach__Affiliati__Parto__42ACE4D4));
		this._Authoraffiliation = new EntitySet<Authoraffiliation>(new Action<Authoraffiliation>(this.attach_Authoraffiliation), new Action<Authoraffiliation>(this.detach_Authoraffiliation));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullstring", DbType="NVarChar(300)")]
	public string Fullstring
	{
		get
		{
			return this._Fullstring;
		}
		set
		{
			if ((this._Fullstring != value))
			{
				this.OnFullstringChanging(value);
				this.SendPropertyChanging();
				this._Fullstring = value;
				this.SendPropertyChanged("Fullstring");
				this.OnFullstringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partof", DbType="Int")]
	public System.Nullable<int> Partof
	{
		get
		{
			return this._Partof;
		}
		set
		{
			if ((this._Partof != value))
			{
				if (this._PartofAffiliation.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPartofChanging(value);
				this.SendPropertyChanging();
				this._Partof = value;
				this.SendPropertyChanged("Partof");
				this.OnPartofChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Affiliati__Parto__42ACE4D4", Storage="_PartofAffiliation", ThisKey="Partof", OtherKey="Id", IsForeignKey=true)]
	public Affiliation PartofAffiliation
	{
		get
		{
			return this._PartofAffiliation.Entity;
		}
		set
		{
			Affiliation previousValue = this._PartofAffiliation.Entity;
			if (((previousValue != value) 
						|| (this._PartofAffiliation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PartofAffiliation.Entity = null;
					previousValue._Affiliati__Parto__42ACE4D4.Remove(this);
				}
				this._PartofAffiliation.Entity = value;
				if ((value != null))
				{
					value._Affiliati__Parto__42ACE4D4.Add(this);
					this._Partof = value.Id;
				}
				else
				{
					this._Partof = default(Nullable<int>);
				}
				this.SendPropertyChanged("PartofAffiliation");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Affiliati__Parto__42ACE4D4", Storage="__Affiliati__Parto__42ACE4D4", ThisKey="Id", OtherKey="Partof", DeleteRule="NO ACTION")]
	public EntitySet<Affiliation> _Affiliati__Parto__42ACE4D4
	{
		get
		{
			return this.@__Affiliati__Parto__42ACE4D4;
		}
		set
		{
			this.@__Affiliati__Parto__42ACE4D4.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Authoraff__Affil__4589517F", Storage="_Authoraffiliation", ThisKey="Id", OtherKey="Affiliation", DeleteRule="NO ACTION")]
	public EntitySet<Authoraffiliation> Authoraffiliation
	{
		get
		{
			return this._Authoraffiliation;
		}
		set
		{
			this._Authoraffiliation.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach__Affiliati__Parto__42ACE4D4(Affiliation entity)
	{
		this.SendPropertyChanging();
		entity.PartofAffiliation = this;
	}
	
	private void detach__Affiliati__Parto__42ACE4D4(Affiliation entity)
	{
		this.SendPropertyChanging();
		entity.PartofAffiliation = null;
	}
	
	private void attach_Authoraffiliation(Authoraffiliation entity)
	{
		this.SendPropertyChanging();
		entity.AffiliationAffiliation = this;
	}
	
	private void detach_Authoraffiliation(Authoraffiliation entity)
	{
		this.SendPropertyChanging();
		entity.AffiliationAffiliation = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Crossreftitle;
	
	private string _Pubmedtitle;
	
	private string _Arxivtitle;
	
	private string _Authorstring;
	
	private System.Nullable<int> _Year;
	
	private System.Nullable<int> _Journal;
	
	private string _Volume;
	
	private System.Nullable<int> _Issue;
	
	private string _Pages;
	
	private string _Subj1;
	
	private string _Subj2;
	
	private string _Subj3;
	
	private System.Nullable<System.DateTime> _DateEntered;
	
	private string _Refstring;
	
	private System.Nullable<int> _ReferenceCount;
	
	private System.Nullable<int> _ReferencedBy;
	
	private string _DOI;
	
	private string _Type;
	
	private string _URL;
	
	private string _Summary;
	
	private bool _Crossref;
	
	private System.Nullable<int> _PMID;
	
	private string _Arxiv;
	
	private EntityRef<Journal> _JournalJournal;
	
	private EntityRef<Subject> _Subject;
	
	private EntityRef<Subject> _Subj2Subject;
	
	private EntityRef<Subject> _Subj3Subject;
	
	private EntitySet<ArticleCrossrefSubject> _ArticleCrossrefSubject;
	
	private EntitySet<ArticlePubmedSubject> _ArticlePubmedSubject;
	
	private EntitySet<ArticleReference> _ArticleReference;
	
	private EntitySet<AuthorArticle> _AuthorArticle;
	
	private EntitySet<Ref> _Ref;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCrossreftitleChanging(string value);
    partial void OnCrossreftitleChanged();
    partial void OnPubmedtitleChanging(string value);
    partial void OnPubmedtitleChanged();
    partial void OnArxivtitleChanging(string value);
    partial void OnArxivtitleChanged();
    partial void OnAuthorstringChanging(string value);
    partial void OnAuthorstringChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnJournalChanging(System.Nullable<int> value);
    partial void OnJournalChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnIssueChanging(System.Nullable<int> value);
    partial void OnIssueChanged();
    partial void OnPagesChanging(string value);
    partial void OnPagesChanged();
    partial void OnSubj1Changing(string value);
    partial void OnSubj1Changed();
    partial void OnSubj2Changing(string value);
    partial void OnSubj2Changed();
    partial void OnSubj3Changing(string value);
    partial void OnSubj3Changed();
    partial void OnDateEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEnteredChanged();
    partial void OnRefstringChanging(string value);
    partial void OnRefstringChanged();
    partial void OnReferenceCountChanging(System.Nullable<int> value);
    partial void OnReferenceCountChanged();
    partial void OnReferencedByChanging(System.Nullable<int> value);
    partial void OnReferencedByChanged();
    partial void OnDOIChanging(string value);
    partial void OnDOIChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnCrossrefChanging(bool value);
    partial void OnCrossrefChanged();
    partial void OnPMIDChanging(System.Nullable<int> value);
    partial void OnPMIDChanged();
    partial void OnArxivChanging(string value);
    partial void OnArxivChanged();
    #endregion
	
	public Article()
	{
		this._JournalJournal = default(EntityRef<Journal>);
		this._Subject = default(EntityRef<Subject>);
		this._Subj2Subject = default(EntityRef<Subject>);
		this._Subj3Subject = default(EntityRef<Subject>);
		this._ArticleCrossrefSubject = new EntitySet<ArticleCrossrefSubject>(new Action<ArticleCrossrefSubject>(this.attach_ArticleCrossrefSubject), new Action<ArticleCrossrefSubject>(this.detach_ArticleCrossrefSubject));
		this._ArticlePubmedSubject = new EntitySet<ArticlePubmedSubject>(new Action<ArticlePubmedSubject>(this.attach_ArticlePubmedSubject), new Action<ArticlePubmedSubject>(this.detach_ArticlePubmedSubject));
		this._ArticleReference = new EntitySet<ArticleReference>(new Action<ArticleReference>(this.attach_ArticleReference), new Action<ArticleReference>(this.detach_ArticleReference));
		this._AuthorArticle = new EntitySet<AuthorArticle>(new Action<AuthorArticle>(this.attach_AuthorArticle), new Action<AuthorArticle>(this.detach_AuthorArticle));
		this._Ref = new EntitySet<Ref>(new Action<Ref>(this.attach_Ref), new Action<Ref>(this.detach_Ref));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crossreftitle", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
	public string Crossreftitle
	{
		get
		{
			return this._Crossreftitle;
		}
		set
		{
			if ((this._Crossreftitle != value))
			{
				this.OnCrossreftitleChanging(value);
				this.SendPropertyChanging();
				this._Crossreftitle = value;
				this.SendPropertyChanged("Crossreftitle");
				this.OnCrossreftitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pubmedtitle", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
	public string Pubmedtitle
	{
		get
		{
			return this._Pubmedtitle;
		}
		set
		{
			if ((this._Pubmedtitle != value))
			{
				this.OnPubmedtitleChanging(value);
				this.SendPropertyChanging();
				this._Pubmedtitle = value;
				this.SendPropertyChanged("Pubmedtitle");
				this.OnPubmedtitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arxivtitle", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
	public string Arxivtitle
	{
		get
		{
			return this._Arxivtitle;
		}
		set
		{
			if ((this._Arxivtitle != value))
			{
				this.OnArxivtitleChanging(value);
				this.SendPropertyChanging();
				this._Arxivtitle = value;
				this.SendPropertyChanged("Arxivtitle");
				this.OnArxivtitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorstring", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Authorstring
	{
		get
		{
			return this._Authorstring;
		}
		set
		{
			if ((this._Authorstring != value))
			{
				this.OnAuthorstringChanging(value);
				this.SendPropertyChanging();
				this._Authorstring = value;
				this.SendPropertyChanged("Authorstring");
				this.OnAuthorstringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
	public System.Nullable<int> Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Journal", DbType="Int")]
	public System.Nullable<int> Journal
	{
		get
		{
			return this._Journal;
		}
		set
		{
			if ((this._Journal != value))
			{
				if (this._JournalJournal.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnJournalChanging(value);
				this.SendPropertyChanging();
				this._Journal = value;
				this.SendPropertyChanged("Journal");
				this.OnJournalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="VarChar(10)")]
	public string Volume
	{
		get
		{
			return this._Volume;
		}
		set
		{
			if ((this._Volume != value))
			{
				this.OnVolumeChanging(value);
				this.SendPropertyChanging();
				this._Volume = value;
				this.SendPropertyChanged("Volume");
				this.OnVolumeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issue", DbType="Int")]
	public System.Nullable<int> Issue
	{
		get
		{
			return this._Issue;
		}
		set
		{
			if ((this._Issue != value))
			{
				this.OnIssueChanging(value);
				this.SendPropertyChanging();
				this._Issue = value;
				this.SendPropertyChanged("Issue");
				this.OnIssueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", DbType="VarChar(15)")]
	public string Pages
	{
		get
		{
			return this._Pages;
		}
		set
		{
			if ((this._Pages != value))
			{
				this.OnPagesChanging(value);
				this.SendPropertyChanging();
				this._Pages = value;
				this.SendPropertyChanged("Pages");
				this.OnPagesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subj1", DbType="VarChar(8)")]
	public string Subj1
	{
		get
		{
			return this._Subj1;
		}
		set
		{
			if ((this._Subj1 != value))
			{
				if (this._Subject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubj1Changing(value);
				this.SendPropertyChanging();
				this._Subj1 = value;
				this.SendPropertyChanged("Subj1");
				this.OnSubj1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subj2", DbType="VarChar(8)")]
	public string Subj2
	{
		get
		{
			return this._Subj2;
		}
		set
		{
			if ((this._Subj2 != value))
			{
				if (this._Subj2Subject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubj2Changing(value);
				this.SendPropertyChanging();
				this._Subj2 = value;
				this.SendPropertyChanged("Subj2");
				this.OnSubj2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subj3", DbType="VarChar(8)")]
	public string Subj3
	{
		get
		{
			return this._Subj3;
		}
		set
		{
			if ((this._Subj3 != value))
			{
				if (this._Subj3Subject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubj3Changing(value);
				this.SendPropertyChanging();
				this._Subj3 = value;
				this.SendPropertyChanged("Subj3");
				this.OnSubj3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEntered", DbType="Date")]
	public System.Nullable<System.DateTime> DateEntered
	{
		get
		{
			return this._DateEntered;
		}
		set
		{
			if ((this._DateEntered != value))
			{
				this.OnDateEnteredChanging(value);
				this.SendPropertyChanging();
				this._DateEntered = value;
				this.SendPropertyChanged("DateEntered");
				this.OnDateEnteredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Refstring", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
	public string Refstring
	{
		get
		{
			return this._Refstring;
		}
		set
		{
			if ((this._Refstring != value))
			{
				this.OnRefstringChanging(value);
				this.SendPropertyChanging();
				this._Refstring = value;
				this.SendPropertyChanged("Refstring");
				this.OnRefstringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCount", DbType="Int")]
	public System.Nullable<int> ReferenceCount
	{
		get
		{
			return this._ReferenceCount;
		}
		set
		{
			if ((this._ReferenceCount != value))
			{
				this.OnReferenceCountChanging(value);
				this.SendPropertyChanging();
				this._ReferenceCount = value;
				this.SendPropertyChanged("ReferenceCount");
				this.OnReferenceCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferencedBy", DbType="Int")]
	public System.Nullable<int> ReferencedBy
	{
		get
		{
			return this._ReferencedBy;
		}
		set
		{
			if ((this._ReferencedBy != value))
			{
				this.OnReferencedByChanging(value);
				this.SendPropertyChanging();
				this._ReferencedBy = value;
				this.SendPropertyChanged("ReferencedBy");
				this.OnReferencedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOI", DbType="VarChar(80)")]
	public string DOI
	{
		get
		{
			return this._DOI;
		}
		set
		{
			if ((this._DOI != value))
			{
				this.OnDOIChanging(value);
				this.SendPropertyChanging();
				this._DOI = value;
				this.SendPropertyChanged("DOI");
				this.OnDOIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(40)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(200)")]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Summary
	{
		get
		{
			return this._Summary;
		}
		set
		{
			if ((this._Summary != value))
			{
				this.OnSummaryChanging(value);
				this.SendPropertyChanging();
				this._Summary = value;
				this.SendPropertyChanged("Summary");
				this.OnSummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crossref", DbType="Bit NOT NULL")]
	public bool Crossref
	{
		get
		{
			return this._Crossref;
		}
		set
		{
			if ((this._Crossref != value))
			{
				this.OnCrossrefChanging(value);
				this.SendPropertyChanging();
				this._Crossref = value;
				this.SendPropertyChanged("Crossref");
				this.OnCrossrefChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMID", DbType="Int")]
	public System.Nullable<int> PMID
	{
		get
		{
			return this._PMID;
		}
		set
		{
			if ((this._PMID != value))
			{
				this.OnPMIDChanging(value);
				this.SendPropertyChanging();
				this._PMID = value;
				this.SendPropertyChanged("PMID");
				this.OnPMIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arxiv", DbType="VarChar(25)")]
	public string Arxiv
	{
		get
		{
			return this._Arxiv;
		}
		set
		{
			if ((this._Arxiv != value))
			{
				this.OnArxivChanging(value);
				this.SendPropertyChanging();
				this._Arxiv = value;
				this.SendPropertyChanged("Arxiv");
				this.OnArxivChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Journal__5006DFF2", Storage="_JournalJournal", ThisKey="Journal", OtherKey="Id", IsForeignKey=true)]
	public Journal JournalJournal
	{
		get
		{
			return this._JournalJournal.Entity;
		}
		set
		{
			Journal previousValue = this._JournalJournal.Entity;
			if (((previousValue != value) 
						|| (this._JournalJournal.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._JournalJournal.Entity = null;
					previousValue.Article.Remove(this);
				}
				this._JournalJournal.Entity = value;
				if ((value != null))
				{
					value.Article.Add(this);
					this._Journal = value.Id;
				}
				else
				{
					this._Journal = default(Nullable<int>);
				}
				this.SendPropertyChanged("JournalJournal");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Subj1__50FB042B", Storage="_Subject", ThisKey="Subj1", OtherKey="Id", IsForeignKey=true)]
	public Subject Subject
	{
		get
		{
			return this._Subject.Entity;
		}
		set
		{
			Subject previousValue = this._Subject.Entity;
			if (((previousValue != value) 
						|| (this._Subject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Subject.Entity = null;
					previousValue.Article.Remove(this);
				}
				this._Subject.Entity = value;
				if ((value != null))
				{
					value.Article.Add(this);
					this._Subj1 = value.Id;
				}
				else
				{
					this._Subj1 = default(string);
				}
				this.SendPropertyChanged("Subject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Subj2__51EF2864", Storage="_Subj2Subject", ThisKey="Subj2", OtherKey="Id", IsForeignKey=true)]
	public Subject Subj2Subject
	{
		get
		{
			return this._Subj2Subject.Entity;
		}
		set
		{
			Subject previousValue = this._Subj2Subject.Entity;
			if (((previousValue != value) 
						|| (this._Subj2Subject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Subj2Subject.Entity = null;
					previousValue._Article__Subj2__51EF2864.Remove(this);
				}
				this._Subj2Subject.Entity = value;
				if ((value != null))
				{
					value._Article__Subj2__51EF2864.Add(this);
					this._Subj2 = value.Id;
				}
				else
				{
					this._Subj2 = default(string);
				}
				this.SendPropertyChanged("Subj2Subject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Subj3__52E34C9D", Storage="_Subj3Subject", ThisKey="Subj3", OtherKey="Id", IsForeignKey=true)]
	public Subject Subj3Subject
	{
		get
		{
			return this._Subj3Subject.Entity;
		}
		set
		{
			Subject previousValue = this._Subj3Subject.Entity;
			if (((previousValue != value) 
						|| (this._Subj3Subject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Subj3Subject.Entity = null;
					previousValue._Article__Subj3__52E34C9D.Remove(this);
				}
				this._Subj3Subject.Entity = value;
				if ((value != null))
				{
					value._Article__Subj3__52E34C9D.Add(this);
					this._Subj3 = value.Id;
				}
				else
				{
					this._Subj3 = default(string);
				}
				this.SendPropertyChanged("Subj3Subject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleCr__Artic__5F492382", Storage="_ArticleCrossrefSubject", ThisKey="Id", OtherKey="Article", DeleteRule="NO ACTION")]
	public EntitySet<ArticleCrossrefSubject> ArticleCrossrefSubject
	{
		get
		{
			return this._ArticleCrossrefSubject;
		}
		set
		{
			this._ArticleCrossrefSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticlePu__Artic__6501FCD8", Storage="_ArticlePubmedSubject", ThisKey="Id", OtherKey="Article", DeleteRule="NO ACTION")]
	public EntitySet<ArticlePubmedSubject> ArticlePubmedSubject
	{
		get
		{
			return this._ArticlePubmedSubject;
		}
		set
		{
			this._ArticlePubmedSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleRe__Artic__12C8C788", Storage="_ArticleReference", ThisKey="Id", OtherKey="Article", DeleteRule="NO ACTION")]
	public EntitySet<ArticleReference> ArticleReference
	{
		get
		{
			return this._ArticleReference;
		}
		set
		{
			this._ArticleReference.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorArt__Artic__55BFB948", Storage="_AuthorArticle", ThisKey="Id", OtherKey="Article", DeleteRule="NO ACTION")]
	public EntitySet<AuthorArticle> AuthorArticle
	{
		get
		{
			return this._AuthorArticle;
		}
		set
		{
			this._AuthorArticle.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ref__Article__0E04126B", Storage="_Ref", ThisKey="Id", OtherKey="Article", DeleteRule="NO ACTION")]
	public EntitySet<Ref> Ref
	{
		get
		{
			return this._Ref;
		}
		set
		{
			this._Ref.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ArticleCrossrefSubject(ArticleCrossrefSubject entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = this;
	}
	
	private void detach_ArticleCrossrefSubject(ArticleCrossrefSubject entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = null;
	}
	
	private void attach_ArticlePubmedSubject(ArticlePubmedSubject entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = this;
	}
	
	private void detach_ArticlePubmedSubject(ArticlePubmedSubject entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = null;
	}
	
	private void attach_ArticleReference(ArticleReference entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = this;
	}
	
	private void detach_ArticleReference(ArticleReference entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = null;
	}
	
	private void attach_AuthorArticle(AuthorArticle entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = this;
	}
	
	private void detach_AuthorArticle(AuthorArticle entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = null;
	}
	
	private void attach_Ref(Ref entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = this;
	}
	
	private void detach_Ref(Ref entity)
	{
		this.SendPropertyChanging();
		entity.ArticleArticle = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleCrossrefSubject")]
public partial class ArticleCrossrefSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Article;
	
	private int _Subject;
	
	private EntityRef<Article> _ArticleArticle;
	
	private EntityRef<CrossrefSubject> _CrossrefSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleChanging(int value);
    partial void OnArticleChanged();
    partial void OnSubjectChanging(int value);
    partial void OnSubjectChanged();
    #endregion
	
	public ArticleCrossrefSubject()
	{
		this._ArticleArticle = default(EntityRef<Article>);
		this._CrossrefSubject = default(EntityRef<CrossrefSubject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="Int NOT NULL")]
	public int Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			if ((this._Article != value))
			{
				if (this._ArticleArticle.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnArticleChanging(value);
				this.SendPropertyChanging();
				this._Article = value;
				this.SendPropertyChanged("Article");
				this.OnArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="Int NOT NULL")]
	public int Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				if (this._CrossrefSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleCr__Artic__5F492382", Storage="_ArticleArticle", ThisKey="Article", OtherKey="Id", IsForeignKey=true)]
	public Article ArticleArticle
	{
		get
		{
			return this._ArticleArticle.Entity;
		}
		set
		{
			Article previousValue = this._ArticleArticle.Entity;
			if (((previousValue != value) 
						|| (this._ArticleArticle.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ArticleArticle.Entity = null;
					previousValue.ArticleCrossrefSubject.Remove(this);
				}
				this._ArticleArticle.Entity = value;
				if ((value != null))
				{
					value.ArticleCrossrefSubject.Add(this);
					this._Article = value.Id;
				}
				else
				{
					this._Article = default(int);
				}
				this.SendPropertyChanged("ArticleArticle");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleCr__Subje__603D47BB", Storage="_CrossrefSubject", ThisKey="Subject", OtherKey="Id", IsForeignKey=true)]
	public CrossrefSubject CrossrefSubject
	{
		get
		{
			return this._CrossrefSubject.Entity;
		}
		set
		{
			CrossrefSubject previousValue = this._CrossrefSubject.Entity;
			if (((previousValue != value) 
						|| (this._CrossrefSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CrossrefSubject.Entity = null;
					previousValue.ArticleCrossrefSubject.Remove(this);
				}
				this._CrossrefSubject.Entity = value;
				if ((value != null))
				{
					value.ArticleCrossrefSubject.Add(this);
					this._Subject = value.Id;
				}
				else
				{
					this._Subject = default(int);
				}
				this.SendPropertyChanged("CrossrefSubject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleEvolangSubject")]
public partial class ArticleEvolangSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Evolang;
	
	private int _Subject;
	
	private EntityRef<Evolang> _EvolangEvolang;
	
	private EntityRef<EvolangSubject> _EvolangSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvolangChanging(int value);
    partial void OnEvolangChanged();
    partial void OnSubjectChanging(int value);
    partial void OnSubjectChanged();
    #endregion
	
	public ArticleEvolangSubject()
	{
		this._EvolangEvolang = default(EntityRef<Evolang>);
		this._EvolangSubject = default(EntityRef<EvolangSubject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evolang", DbType="Int NOT NULL")]
	public int Evolang
	{
		get
		{
			return this._Evolang;
		}
		set
		{
			if ((this._Evolang != value))
			{
				if (this._EvolangEvolang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEvolangChanging(value);
				this.SendPropertyChanging();
				this._Evolang = value;
				this.SendPropertyChanged("Evolang");
				this.OnEvolangChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="Int NOT NULL")]
	public int Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				if (this._EvolangSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleEv__Evola__38EE7070", Storage="_EvolangEvolang", ThisKey="Evolang", OtherKey="Id", IsForeignKey=true)]
	public Evolang EvolangEvolang
	{
		get
		{
			return this._EvolangEvolang.Entity;
		}
		set
		{
			Evolang previousValue = this._EvolangEvolang.Entity;
			if (((previousValue != value) 
						|| (this._EvolangEvolang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EvolangEvolang.Entity = null;
					previousValue.ArticleEvolangSubject.Remove(this);
				}
				this._EvolangEvolang.Entity = value;
				if ((value != null))
				{
					value.ArticleEvolangSubject.Add(this);
					this._Evolang = value.Id;
				}
				else
				{
					this._Evolang = default(int);
				}
				this.SendPropertyChanged("EvolangEvolang");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleEv__Subje__39E294A9", Storage="_EvolangSubject", ThisKey="Subject", OtherKey="Id", IsForeignKey=true)]
	public EvolangSubject EvolangSubject
	{
		get
		{
			return this._EvolangSubject.Entity;
		}
		set
		{
			EvolangSubject previousValue = this._EvolangSubject.Entity;
			if (((previousValue != value) 
						|| (this._EvolangSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EvolangSubject.Entity = null;
					previousValue.ArticleEvolangSubject.Remove(this);
				}
				this._EvolangSubject.Entity = value;
				if ((value != null))
				{
					value.ArticleEvolangSubject.Add(this);
					this._Subject = value.Id;
				}
				else
				{
					this._Subject = default(int);
				}
				this.SendPropertyChanged("EvolangSubject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticlePubmedSubject")]
public partial class ArticlePubmedSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Article;
	
	private int _Subject;
	
	private EntityRef<Article> _ArticleArticle;
	
	private EntityRef<PubmedSubject> _PubmedSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleChanging(int value);
    partial void OnArticleChanged();
    partial void OnSubjectChanging(int value);
    partial void OnSubjectChanged();
    #endregion
	
	public ArticlePubmedSubject()
	{
		this._ArticleArticle = default(EntityRef<Article>);
		this._PubmedSubject = default(EntityRef<PubmedSubject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="Int NOT NULL")]
	public int Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			if ((this._Article != value))
			{
				if (this._ArticleArticle.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnArticleChanging(value);
				this.SendPropertyChanging();
				this._Article = value;
				this.SendPropertyChanged("Article");
				this.OnArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="Int NOT NULL")]
	public int Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				if (this._PubmedSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticlePu__Artic__6501FCD8", Storage="_ArticleArticle", ThisKey="Article", OtherKey="Id", IsForeignKey=true)]
	public Article ArticleArticle
	{
		get
		{
			return this._ArticleArticle.Entity;
		}
		set
		{
			Article previousValue = this._ArticleArticle.Entity;
			if (((previousValue != value) 
						|| (this._ArticleArticle.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ArticleArticle.Entity = null;
					previousValue.ArticlePubmedSubject.Remove(this);
				}
				this._ArticleArticle.Entity = value;
				if ((value != null))
				{
					value.ArticlePubmedSubject.Add(this);
					this._Article = value.Id;
				}
				else
				{
					this._Article = default(int);
				}
				this.SendPropertyChanged("ArticleArticle");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticlePu__Subje__65F62111", Storage="_PubmedSubject", ThisKey="Subject", OtherKey="Id", IsForeignKey=true)]
	public PubmedSubject PubmedSubject
	{
		get
		{
			return this._PubmedSubject.Entity;
		}
		set
		{
			PubmedSubject previousValue = this._PubmedSubject.Entity;
			if (((previousValue != value) 
						|| (this._PubmedSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PubmedSubject.Entity = null;
					previousValue.ArticlePubmedSubject.Remove(this);
				}
				this._PubmedSubject.Entity = value;
				if ((value != null))
				{
					value.ArticlePubmedSubject.Add(this);
					this._Subject = value.Id;
				}
				else
				{
					this._Subject = default(int);
				}
				this.SendPropertyChanged("PubmedSubject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArticleReference")]
public partial class ArticleReference : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Article;
	
	private int _Reference;
	
	private EntityRef<Article> _ArticleArticle;
	
	private EntityRef<Ref> _Ref;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleChanging(int value);
    partial void OnArticleChanged();
    partial void OnReferenceChanging(int value);
    partial void OnReferenceChanged();
    #endregion
	
	public ArticleReference()
	{
		this._ArticleArticle = default(EntityRef<Article>);
		this._Ref = default(EntityRef<Ref>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="Int NOT NULL")]
	public int Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			if ((this._Article != value))
			{
				if (this._ArticleArticle.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnArticleChanging(value);
				this.SendPropertyChanging();
				this._Article = value;
				this.SendPropertyChanged("Article");
				this.OnArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="Int NOT NULL")]
	public int Reference
	{
		get
		{
			return this._Reference;
		}
		set
		{
			if ((this._Reference != value))
			{
				if (this._Ref.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnReferenceChanging(value);
				this.SendPropertyChanging();
				this._Reference = value;
				this.SendPropertyChanged("Reference");
				this.OnReferenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleRe__Artic__12C8C788", Storage="_ArticleArticle", ThisKey="Article", OtherKey="Id", IsForeignKey=true)]
	public Article ArticleArticle
	{
		get
		{
			return this._ArticleArticle.Entity;
		}
		set
		{
			Article previousValue = this._ArticleArticle.Entity;
			if (((previousValue != value) 
						|| (this._ArticleArticle.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ArticleArticle.Entity = null;
					previousValue.ArticleReference.Remove(this);
				}
				this._ArticleArticle.Entity = value;
				if ((value != null))
				{
					value.ArticleReference.Add(this);
					this._Article = value.Id;
				}
				else
				{
					this._Article = default(int);
				}
				this.SendPropertyChanged("ArticleArticle");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleRe__Refer__13BCEBC1", Storage="_Ref", ThisKey="Reference", OtherKey="Id", IsForeignKey=true)]
	public Ref Ref
	{
		get
		{
			return this._Ref.Entity;
		}
		set
		{
			Ref previousValue = this._Ref.Entity;
			if (((previousValue != value) 
						|| (this._Ref.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Ref.Entity = null;
					previousValue.ArticleReference.Remove(this);
				}
				this._Ref.Entity = value;
				if ((value != null))
				{
					value.ArticleReference.Add(this);
					this._Reference = value.Id;
				}
				else
				{
					this._Reference = default(int);
				}
				this.SendPropertyChanged("Ref");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Author")]
public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Familyname;
	
	private string _Givenname;
	
	private string _FamilynameAscii;
	
	private string _GivennameAscii;
	
	private EntitySet<Authoraffiliation> _Authoraffiliation;
	
	private EntitySet<AuthorAlias> _AuthorAlias;
	
	private EntitySet<AuthorArticle> _AuthorArticle;
	
	private EntitySet<AuthorBook> _AuthorBook;
	
	private EntitySet<AuthorChapter> _AuthorChapter;
	
	private EntitySet<AuthorSubject> _AuthorSubject;
	
	private EntitySet<EvolangAuthor> _EvolangAuthor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilynameChanging(string value);
    partial void OnFamilynameChanged();
    partial void OnGivennameChanging(string value);
    partial void OnGivennameChanged();
    partial void OnFamilynameAsciiChanging(string value);
    partial void OnFamilynameAsciiChanged();
    partial void OnGivennameAsciiChanging(string value);
    partial void OnGivennameAsciiChanged();
    #endregion
	
	public Author()
	{
		this._Authoraffiliation = new EntitySet<Authoraffiliation>(new Action<Authoraffiliation>(this.attach_Authoraffiliation), new Action<Authoraffiliation>(this.detach_Authoraffiliation));
		this._AuthorAlias = new EntitySet<AuthorAlias>(new Action<AuthorAlias>(this.attach_AuthorAlias), new Action<AuthorAlias>(this.detach_AuthorAlias));
		this._AuthorArticle = new EntitySet<AuthorArticle>(new Action<AuthorArticle>(this.attach_AuthorArticle), new Action<AuthorArticle>(this.detach_AuthorArticle));
		this._AuthorBook = new EntitySet<AuthorBook>(new Action<AuthorBook>(this.attach_AuthorBook), new Action<AuthorBook>(this.detach_AuthorBook));
		this._AuthorChapter = new EntitySet<AuthorChapter>(new Action<AuthorChapter>(this.attach_AuthorChapter), new Action<AuthorChapter>(this.detach_AuthorChapter));
		this._AuthorSubject = new EntitySet<AuthorSubject>(new Action<AuthorSubject>(this.attach_AuthorSubject), new Action<AuthorSubject>(this.detach_AuthorSubject));
		this._EvolangAuthor = new EntitySet<EvolangAuthor>(new Action<EvolangAuthor>(this.attach_EvolangAuthor), new Action<EvolangAuthor>(this.detach_EvolangAuthor));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Familyname", DbType="NVarChar(75)")]
	public string Familyname
	{
		get
		{
			return this._Familyname;
		}
		set
		{
			if ((this._Familyname != value))
			{
				this.OnFamilynameChanging(value);
				this.SendPropertyChanging();
				this._Familyname = value;
				this.SendPropertyChanged("Familyname");
				this.OnFamilynameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Givenname", DbType="NVarChar(75)")]
	public string Givenname
	{
		get
		{
			return this._Givenname;
		}
		set
		{
			if ((this._Givenname != value))
			{
				this.OnGivennameChanging(value);
				this.SendPropertyChanging();
				this._Givenname = value;
				this.SendPropertyChanged("Givenname");
				this.OnGivennameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilynameAscii", DbType="NVarChar(75)")]
	public string FamilynameAscii
	{
		get
		{
			return this._FamilynameAscii;
		}
		set
		{
			if ((this._FamilynameAscii != value))
			{
				this.OnFamilynameAsciiChanging(value);
				this.SendPropertyChanging();
				this._FamilynameAscii = value;
				this.SendPropertyChanged("FamilynameAscii");
				this.OnFamilynameAsciiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivennameAscii", DbType="NVarChar(75)")]
	public string GivennameAscii
	{
		get
		{
			return this._GivennameAscii;
		}
		set
		{
			if ((this._GivennameAscii != value))
			{
				this.OnGivennameAsciiChanging(value);
				this.SendPropertyChanging();
				this._GivennameAscii = value;
				this.SendPropertyChanged("GivennameAscii");
				this.OnGivennameAsciiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Authoraff__Autho__467D75B8", Storage="_Authoraffiliation", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<Authoraffiliation> Authoraffiliation
	{
		get
		{
			return this._Authoraffiliation;
		}
		set
		{
			this._Authoraffiliation.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorAli__Autho__0662F0A3", Storage="_AuthorAlias", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<AuthorAlias> AuthorAlias
	{
		get
		{
			return this._AuthorAlias;
		}
		set
		{
			this._AuthorAlias.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorArt__Autho__56B3DD81", Storage="_AuthorArticle", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<AuthorArticle> AuthorArticle
	{
		get
		{
			return this._AuthorArticle;
		}
		set
		{
			this._AuthorArticle.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorBoo__Autho__178D7CA5", Storage="_AuthorBook", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<AuthorBook> AuthorBook
	{
		get
		{
			return this._AuthorBook;
		}
		set
		{
			this._AuthorBook.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorCha__Autho__1E3A7A34", Storage="_AuthorChapter", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<AuthorChapter> AuthorChapter
	{
		get
		{
			return this._AuthorChapter;
		}
		set
		{
			this._AuthorChapter.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Autho__324172E1", Storage="_AuthorSubject", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<AuthorSubject> AuthorSubject
	{
		get
		{
			return this._AuthorSubject;
		}
		set
		{
			this._AuthorSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__EvolangAu__Autho__26CFC035", Storage="_EvolangAuthor", ThisKey="Id", OtherKey="Author", DeleteRule="NO ACTION")]
	public EntitySet<EvolangAuthor> EvolangAuthor
	{
		get
		{
			return this._EvolangAuthor;
		}
		set
		{
			this._EvolangAuthor.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Authoraffiliation(Authoraffiliation entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_Authoraffiliation(Authoraffiliation entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
	
	private void attach_AuthorAlias(AuthorAlias entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_AuthorAlias(AuthorAlias entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
	
	private void attach_AuthorArticle(AuthorArticle entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_AuthorArticle(AuthorArticle entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
	
	private void attach_AuthorBook(AuthorBook entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_AuthorBook(AuthorBook entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
	
	private void attach_AuthorChapter(AuthorChapter entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_AuthorChapter(AuthorChapter entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
	
	private void attach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
	
	private void attach_EvolangAuthor(EvolangAuthor entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = this;
	}
	
	private void detach_EvolangAuthor(EvolangAuthor entity)
	{
		this.SendPropertyChanging();
		entity.AuthorAuthor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authoraffiliation")]
public partial class Authoraffiliation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Affiliation;
	
	private int _Author;
	
	private EntityRef<Affiliation> _AffiliationAffiliation;
	
	private EntityRef<Author> _AuthorAuthor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAffiliationChanging(int value);
    partial void OnAffiliationChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    #endregion
	
	public Authoraffiliation()
	{
		this._AffiliationAffiliation = default(EntityRef<Affiliation>);
		this._AuthorAuthor = default(EntityRef<Author>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Affiliation", DbType="Int NOT NULL")]
	public int Affiliation
	{
		get
		{
			return this._Affiliation;
		}
		set
		{
			if ((this._Affiliation != value))
			{
				if (this._AffiliationAffiliation.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAffiliationChanging(value);
				this.SendPropertyChanging();
				this._Affiliation = value;
				this.SendPropertyChanged("Affiliation");
				this.OnAffiliationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Authoraff__Affil__4589517F", Storage="_AffiliationAffiliation", ThisKey="Affiliation", OtherKey="Id", IsForeignKey=true)]
	public Affiliation AffiliationAffiliation
	{
		get
		{
			return this._AffiliationAffiliation.Entity;
		}
		set
		{
			Affiliation previousValue = this._AffiliationAffiliation.Entity;
			if (((previousValue != value) 
						|| (this._AffiliationAffiliation.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AffiliationAffiliation.Entity = null;
					previousValue.Authoraffiliation.Remove(this);
				}
				this._AffiliationAffiliation.Entity = value;
				if ((value != null))
				{
					value.Authoraffiliation.Add(this);
					this._Affiliation = value.Id;
				}
				else
				{
					this._Affiliation = default(int);
				}
				this.SendPropertyChanged("AffiliationAffiliation");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Authoraff__Autho__467D75B8", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.Authoraffiliation.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.Authoraffiliation.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorAlias")]
public partial class AuthorAlias : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Familyname;
	
	private string _Givenname;
	
	private int _Author;
	
	private EntityRef<Author> _AuthorAuthor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilynameChanging(string value);
    partial void OnFamilynameChanged();
    partial void OnGivennameChanging(string value);
    partial void OnGivennameChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    #endregion
	
	public AuthorAlias()
	{
		this._AuthorAuthor = default(EntityRef<Author>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Familyname", DbType="NVarChar(75)")]
	public string Familyname
	{
		get
		{
			return this._Familyname;
		}
		set
		{
			if ((this._Familyname != value))
			{
				this.OnFamilynameChanging(value);
				this.SendPropertyChanging();
				this._Familyname = value;
				this.SendPropertyChanged("Familyname");
				this.OnFamilynameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Givenname", DbType="NVarChar(75)")]
	public string Givenname
	{
		get
		{
			return this._Givenname;
		}
		set
		{
			if ((this._Givenname != value))
			{
				this.OnGivennameChanging(value);
				this.SendPropertyChanging();
				this._Givenname = value;
				this.SendPropertyChanged("Givenname");
				this.OnGivennameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorAli__Autho__0662F0A3", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.AuthorAlias.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.AuthorAlias.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorArticle")]
public partial class AuthorArticle : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Article;
	
	private int _Author;
	
	private int _Source;
	
	private EntityRef<Article> _ArticleArticle;
	
	private EntityRef<Author> _AuthorAuthor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleChanging(int value);
    partial void OnArticleChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    partial void OnSourceChanging(int value);
    partial void OnSourceChanged();
    #endregion
	
	public AuthorArticle()
	{
		this._ArticleArticle = default(EntityRef<Article>);
		this._AuthorAuthor = default(EntityRef<Author>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="Int NOT NULL")]
	public int Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			if ((this._Article != value))
			{
				if (this._ArticleArticle.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnArticleChanging(value);
				this.SendPropertyChanging();
				this._Article = value;
				this.SendPropertyChanged("Article");
				this.OnArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="Int NOT NULL")]
	public int Source
	{
		get
		{
			return this._Source;
		}
		set
		{
			if ((this._Source != value))
			{
				this.OnSourceChanging(value);
				this.SendPropertyChanging();
				this._Source = value;
				this.SendPropertyChanged("Source");
				this.OnSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorArt__Artic__55BFB948", Storage="_ArticleArticle", ThisKey="Article", OtherKey="Id", IsForeignKey=true)]
	public Article ArticleArticle
	{
		get
		{
			return this._ArticleArticle.Entity;
		}
		set
		{
			Article previousValue = this._ArticleArticle.Entity;
			if (((previousValue != value) 
						|| (this._ArticleArticle.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ArticleArticle.Entity = null;
					previousValue.AuthorArticle.Remove(this);
				}
				this._ArticleArticle.Entity = value;
				if ((value != null))
				{
					value.AuthorArticle.Add(this);
					this._Article = value.Id;
				}
				else
				{
					this._Article = default(int);
				}
				this.SendPropertyChanged("ArticleArticle");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorArt__Autho__56B3DD81", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.AuthorArticle.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.AuthorArticle.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorBook")]
public partial class AuthorBook : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _BookAlbum;
	
	private int _Author;
	
	private EntityRef<Author> _AuthorAuthor;
	
	private EntityRef<BookAlbum> _BookAlbumBookAlbum;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBookAlbumChanging(int value);
    partial void OnBookAlbumChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    #endregion
	
	public AuthorBook()
	{
		this._AuthorAuthor = default(EntityRef<Author>);
		this._BookAlbumBookAlbum = default(EntityRef<BookAlbum>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAlbum", DbType="Int NOT NULL")]
	public int BookAlbum
	{
		get
		{
			return this._BookAlbum;
		}
		set
		{
			if ((this._BookAlbum != value))
			{
				if (this._BookAlbumBookAlbum.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookAlbumChanging(value);
				this.SendPropertyChanging();
				this._BookAlbum = value;
				this.SendPropertyChanged("BookAlbum");
				this.OnBookAlbumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorBoo__Autho__178D7CA5", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.AuthorBook.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.AuthorBook.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorBoo__BookA__1699586C", Storage="_BookAlbumBookAlbum", ThisKey="BookAlbum", OtherKey="Id", IsForeignKey=true)]
	public BookAlbum BookAlbumBookAlbum
	{
		get
		{
			return this._BookAlbumBookAlbum.Entity;
		}
		set
		{
			BookAlbum previousValue = this._BookAlbumBookAlbum.Entity;
			if (((previousValue != value) 
						|| (this._BookAlbumBookAlbum.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookAlbumBookAlbum.Entity = null;
					previousValue.AuthorBook.Remove(this);
				}
				this._BookAlbumBookAlbum.Entity = value;
				if ((value != null))
				{
					value.AuthorBook.Add(this);
					this._BookAlbum = value.Id;
				}
				else
				{
					this._BookAlbum = default(int);
				}
				this.SendPropertyChanged("BookAlbumBookAlbum");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorChapter")]
public partial class AuthorChapter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _ChapterSong;
	
	private int _Author;
	
	private EntityRef<Author> _AuthorAuthor;
	
	private EntityRef<ChapterSong> _ChapterSongChapterSong;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChapterSongChanging(int value);
    partial void OnChapterSongChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    #endregion
	
	public AuthorChapter()
	{
		this._AuthorAuthor = default(EntityRef<Author>);
		this._ChapterSongChapterSong = default(EntityRef<ChapterSong>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChapterSong", DbType="Int NOT NULL")]
	public int ChapterSong
	{
		get
		{
			return this._ChapterSong;
		}
		set
		{
			if ((this._ChapterSong != value))
			{
				if (this._ChapterSongChapterSong.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnChapterSongChanging(value);
				this.SendPropertyChanging();
				this._ChapterSong = value;
				this.SendPropertyChanged("ChapterSong");
				this.OnChapterSongChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorCha__Autho__1E3A7A34", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.AuthorChapter.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.AuthorChapter.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorCha__Chapt__1D4655FB", Storage="_ChapterSongChapterSong", ThisKey="ChapterSong", OtherKey="Id", IsForeignKey=true)]
	public ChapterSong ChapterSongChapterSong
	{
		get
		{
			return this._ChapterSongChapterSong.Entity;
		}
		set
		{
			ChapterSong previousValue = this._ChapterSongChapterSong.Entity;
			if (((previousValue != value) 
						|| (this._ChapterSongChapterSong.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ChapterSongChapterSong.Entity = null;
					previousValue.AuthorChapter.Remove(this);
				}
				this._ChapterSongChapterSong.Entity = value;
				if ((value != null))
				{
					value.AuthorChapter.Add(this);
					this._ChapterSong = value.Id;
				}
				else
				{
					this._ChapterSong = default(int);
				}
				this.SendPropertyChanged("ChapterSongChapterSong");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorSubject")]
public partial class AuthorSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Author;
	
	private float _Strength;
	
	private string _Subject;
	
	private System.Nullable<int> _CrossrefSubject;
	
	private System.Nullable<int> _PubmedSubject;
	
	private System.Nullable<int> _EvolangSubject;
	
	private EntityRef<Author> _AuthorAuthor;
	
	private EntityRef<CrossrefSubject> _CrossrefSubjectCrossrefSubject;
	
	private EntityRef<EvolangSubject> _EvolangSubjectEvolangSubject;
	
	private EntityRef<PubmedSubject> _PubmedSubjectPubmedSubject;
	
	private EntityRef<Subject> _SubjectSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    partial void OnStrengthChanging(float value);
    partial void OnStrengthChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnCrossrefSubjectChanging(System.Nullable<int> value);
    partial void OnCrossrefSubjectChanged();
    partial void OnPubmedSubjectChanging(System.Nullable<int> value);
    partial void OnPubmedSubjectChanged();
    partial void OnEvolangSubjectChanging(System.Nullable<int> value);
    partial void OnEvolangSubjectChanged();
    #endregion
	
	public AuthorSubject()
	{
		this._AuthorAuthor = default(EntityRef<Author>);
		this._CrossrefSubjectCrossrefSubject = default(EntityRef<CrossrefSubject>);
		this._EvolangSubjectEvolangSubject = default(EntityRef<EvolangSubject>);
		this._PubmedSubjectPubmedSubject = default(EntityRef<PubmedSubject>);
		this._SubjectSubject = default(EntityRef<Subject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Strength", DbType="Real NOT NULL")]
	public float Strength
	{
		get
		{
			return this._Strength;
		}
		set
		{
			if ((this._Strength != value))
			{
				this.OnStrengthChanging(value);
				this.SendPropertyChanging();
				this._Strength = value;
				this.SendPropertyChanged("Strength");
				this.OnStrengthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(8)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				if (this._SubjectSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrossrefSubject", DbType="Int")]
	public System.Nullable<int> CrossrefSubject
	{
		get
		{
			return this._CrossrefSubject;
		}
		set
		{
			if ((this._CrossrefSubject != value))
			{
				if (this._CrossrefSubjectCrossrefSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCrossrefSubjectChanging(value);
				this.SendPropertyChanging();
				this._CrossrefSubject = value;
				this.SendPropertyChanged("CrossrefSubject");
				this.OnCrossrefSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubmedSubject", DbType="Int")]
	public System.Nullable<int> PubmedSubject
	{
		get
		{
			return this._PubmedSubject;
		}
		set
		{
			if ((this._PubmedSubject != value))
			{
				if (this._PubmedSubjectPubmedSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPubmedSubjectChanging(value);
				this.SendPropertyChanging();
				this._PubmedSubject = value;
				this.SendPropertyChanged("PubmedSubject");
				this.OnPubmedSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvolangSubject", DbType="Int")]
	public System.Nullable<int> EvolangSubject
	{
		get
		{
			return this._EvolangSubject;
		}
		set
		{
			if ((this._EvolangSubject != value))
			{
				if (this._EvolangSubjectEvolangSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEvolangSubjectChanging(value);
				this.SendPropertyChanging();
				this._EvolangSubject = value;
				this.SendPropertyChanged("EvolangSubject");
				this.OnEvolangSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Autho__324172E1", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.AuthorSubject.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.AuthorSubject.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Cross__3429BB53", Storage="_CrossrefSubjectCrossrefSubject", ThisKey="CrossrefSubject", OtherKey="Id", IsForeignKey=true)]
	public CrossrefSubject CrossrefSubjectCrossrefSubject
	{
		get
		{
			return this._CrossrefSubjectCrossrefSubject.Entity;
		}
		set
		{
			CrossrefSubject previousValue = this._CrossrefSubjectCrossrefSubject.Entity;
			if (((previousValue != value) 
						|| (this._CrossrefSubjectCrossrefSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CrossrefSubjectCrossrefSubject.Entity = null;
					previousValue.AuthorSubject.Remove(this);
				}
				this._CrossrefSubjectCrossrefSubject.Entity = value;
				if ((value != null))
				{
					value.AuthorSubject.Add(this);
					this._CrossrefSubject = value.Id;
				}
				else
				{
					this._CrossrefSubject = default(Nullable<int>);
				}
				this.SendPropertyChanged("CrossrefSubjectCrossrefSubject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Evola__361203C5", Storage="_EvolangSubjectEvolangSubject", ThisKey="EvolangSubject", OtherKey="Id", IsForeignKey=true)]
	public EvolangSubject EvolangSubjectEvolangSubject
	{
		get
		{
			return this._EvolangSubjectEvolangSubject.Entity;
		}
		set
		{
			EvolangSubject previousValue = this._EvolangSubjectEvolangSubject.Entity;
			if (((previousValue != value) 
						|| (this._EvolangSubjectEvolangSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EvolangSubjectEvolangSubject.Entity = null;
					previousValue.AuthorSubject.Remove(this);
				}
				this._EvolangSubjectEvolangSubject.Entity = value;
				if ((value != null))
				{
					value.AuthorSubject.Add(this);
					this._EvolangSubject = value.Id;
				}
				else
				{
					this._EvolangSubject = default(Nullable<int>);
				}
				this.SendPropertyChanged("EvolangSubjectEvolangSubject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Pubme__351DDF8C", Storage="_PubmedSubjectPubmedSubject", ThisKey="PubmedSubject", OtherKey="Id", IsForeignKey=true)]
	public PubmedSubject PubmedSubjectPubmedSubject
	{
		get
		{
			return this._PubmedSubjectPubmedSubject.Entity;
		}
		set
		{
			PubmedSubject previousValue = this._PubmedSubjectPubmedSubject.Entity;
			if (((previousValue != value) 
						|| (this._PubmedSubjectPubmedSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PubmedSubjectPubmedSubject.Entity = null;
					previousValue.AuthorSubject.Remove(this);
				}
				this._PubmedSubjectPubmedSubject.Entity = value;
				if ((value != null))
				{
					value.AuthorSubject.Add(this);
					this._PubmedSubject = value.Id;
				}
				else
				{
					this._PubmedSubject = default(Nullable<int>);
				}
				this.SendPropertyChanged("PubmedSubjectPubmedSubject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Subje__3335971A", Storage="_SubjectSubject", ThisKey="Subject", OtherKey="Id", IsForeignKey=true)]
	public Subject SubjectSubject
	{
		get
		{
			return this._SubjectSubject.Entity;
		}
		set
		{
			Subject previousValue = this._SubjectSubject.Entity;
			if (((previousValue != value) 
						|| (this._SubjectSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SubjectSubject.Entity = null;
					previousValue.AuthorSubject.Remove(this);
				}
				this._SubjectSubject.Entity = value;
				if ((value != null))
				{
					value.AuthorSubject.Add(this);
					this._Subject = value.Id;
				}
				else
				{
					this._Subject = default(string);
				}
				this.SendPropertyChanged("SubjectSubject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookAlbum")]
public partial class BookAlbum : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private System.Nullable<int> _YearFirst;
	
	private System.Nullable<int> _YearThis;
	
	private System.Nullable<int> _Publisher;
	
	private string _Subject;
	
	private System.Nullable<System.DateTime> _DateBought;
	
	private string _WhereBought;
	
	private System.Nullable<int> _Price;
	
	private int _Type;
	
	private System.Nullable<int> _Liked;
	
	private string _ISBN;
	
	private System.Nullable<bool> _Havecopy;
	
	private EntitySet<AuthorBook> _AuthorBook;
	
	private EntityRef<Publisher> _PublisherPublisher;
	
	private EntityRef<Subject> _SubjectSubject;
	
	private EntityRef<Bookmusictype> _Bookmusictype;
	
	private EntitySet<ChapterSong> _ChapterSong;
	
	private EntitySet<Ref> _Ref;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnYearFirstChanging(System.Nullable<int> value);
    partial void OnYearFirstChanged();
    partial void OnYearThisChanging(System.Nullable<int> value);
    partial void OnYearThisChanged();
    partial void OnPublisherChanging(System.Nullable<int> value);
    partial void OnPublisherChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDateBoughtChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBoughtChanged();
    partial void OnWhereBoughtChanging(string value);
    partial void OnWhereBoughtChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnLikedChanging(System.Nullable<int> value);
    partial void OnLikedChanged();
    partial void OnISBNChanging(string value);
    partial void OnISBNChanged();
    partial void OnHavecopyChanging(System.Nullable<bool> value);
    partial void OnHavecopyChanged();
    #endregion
	
	public BookAlbum()
	{
		this._AuthorBook = new EntitySet<AuthorBook>(new Action<AuthorBook>(this.attach_AuthorBook), new Action<AuthorBook>(this.detach_AuthorBook));
		this._PublisherPublisher = default(EntityRef<Publisher>);
		this._SubjectSubject = default(EntityRef<Subject>);
		this._Bookmusictype = default(EntityRef<Bookmusictype>);
		this._ChapterSong = new EntitySet<ChapterSong>(new Action<ChapterSong>(this.attach_ChapterSong), new Action<ChapterSong>(this.detach_ChapterSong));
		this._Ref = new EntitySet<Ref>(new Action<Ref>(this.attach_Ref), new Action<Ref>(this.detach_Ref));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearFirst", DbType="Int")]
	public System.Nullable<int> YearFirst
	{
		get
		{
			return this._YearFirst;
		}
		set
		{
			if ((this._YearFirst != value))
			{
				this.OnYearFirstChanging(value);
				this.SendPropertyChanging();
				this._YearFirst = value;
				this.SendPropertyChanged("YearFirst");
				this.OnYearFirstChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearThis", DbType="Int")]
	public System.Nullable<int> YearThis
	{
		get
		{
			return this._YearThis;
		}
		set
		{
			if ((this._YearThis != value))
			{
				this.OnYearThisChanging(value);
				this.SendPropertyChanging();
				this._YearThis = value;
				this.SendPropertyChanged("YearThis");
				this.OnYearThisChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="Int")]
	public System.Nullable<int> Publisher
	{
		get
		{
			return this._Publisher;
		}
		set
		{
			if ((this._Publisher != value))
			{
				if (this._PublisherPublisher.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPublisherChanging(value);
				this.SendPropertyChanging();
				this._Publisher = value;
				this.SendPropertyChanged("Publisher");
				this.OnPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(8)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				if (this._SubjectSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBought", DbType="Date")]
	public System.Nullable<System.DateTime> DateBought
	{
		get
		{
			return this._DateBought;
		}
		set
		{
			if ((this._DateBought != value))
			{
				this.OnDateBoughtChanging(value);
				this.SendPropertyChanging();
				this._DateBought = value;
				this.SendPropertyChanged("DateBought");
				this.OnDateBoughtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WhereBought", DbType="VarChar(60)")]
	public string WhereBought
	{
		get
		{
			return this._WhereBought;
		}
		set
		{
			if ((this._WhereBought != value))
			{
				this.OnWhereBoughtChanging(value);
				this.SendPropertyChanging();
				this._WhereBought = value;
				this.SendPropertyChanged("WhereBought");
				this.OnWhereBoughtChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
	public System.Nullable<int> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
	public int Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				if (this._Bookmusictype.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liked", DbType="Int")]
	public System.Nullable<int> Liked
	{
		get
		{
			return this._Liked;
		}
		set
		{
			if ((this._Liked != value))
			{
				this.OnLikedChanging(value);
				this.SendPropertyChanging();
				this._Liked = value;
				this.SendPropertyChanged("Liked");
				this.OnLikedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISBN", DbType="VarChar(15)")]
	public string ISBN
	{
		get
		{
			return this._ISBN;
		}
		set
		{
			if ((this._ISBN != value))
			{
				this.OnISBNChanging(value);
				this.SendPropertyChanging();
				this._ISBN = value;
				this.SendPropertyChanged("ISBN");
				this.OnISBNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Havecopy", DbType="Bit")]
	public System.Nullable<bool> Havecopy
	{
		get
		{
			return this._Havecopy;
		}
		set
		{
			if ((this._Havecopy != value))
			{
				this.OnHavecopyChanging(value);
				this.SendPropertyChanging();
				this._Havecopy = value;
				this.SendPropertyChanged("Havecopy");
				this.OnHavecopyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorBoo__BookA__1699586C", Storage="_AuthorBook", ThisKey="Id", OtherKey="BookAlbum", DeleteRule="NO ACTION")]
	public EntitySet<AuthorBook> AuthorBook
	{
		get
		{
			return this._AuthorBook;
		}
		set
		{
			this._AuthorBook.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BookAlbum__Publi__093F5D4E", Storage="_PublisherPublisher", ThisKey="Publisher", OtherKey="Id", IsForeignKey=true)]
	public Publisher PublisherPublisher
	{
		get
		{
			return this._PublisherPublisher.Entity;
		}
		set
		{
			Publisher previousValue = this._PublisherPublisher.Entity;
			if (((previousValue != value) 
						|| (this._PublisherPublisher.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PublisherPublisher.Entity = null;
					previousValue.BookAlbum.Remove(this);
				}
				this._PublisherPublisher.Entity = value;
				if ((value != null))
				{
					value.BookAlbum.Add(this);
					this._Publisher = value.Id;
				}
				else
				{
					this._Publisher = default(Nullable<int>);
				}
				this.SendPropertyChanged("PublisherPublisher");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BookAlbum__Subje__0A338187", Storage="_SubjectSubject", ThisKey="Subject", OtherKey="Id", IsForeignKey=true)]
	public Subject SubjectSubject
	{
		get
		{
			return this._SubjectSubject.Entity;
		}
		set
		{
			Subject previousValue = this._SubjectSubject.Entity;
			if (((previousValue != value) 
						|| (this._SubjectSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SubjectSubject.Entity = null;
					previousValue.BookAlbum.Remove(this);
				}
				this._SubjectSubject.Entity = value;
				if ((value != null))
				{
					value.BookAlbum.Add(this);
					this._Subject = value.Id;
				}
				else
				{
					this._Subject = default(string);
				}
				this.SendPropertyChanged("SubjectSubject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BookAlbum__Type__0B27A5C0", Storage="_Bookmusictype", ThisKey="Type", OtherKey="Id", IsForeignKey=true)]
	public Bookmusictype Bookmusictype
	{
		get
		{
			return this._Bookmusictype.Entity;
		}
		set
		{
			Bookmusictype previousValue = this._Bookmusictype.Entity;
			if (((previousValue != value) 
						|| (this._Bookmusictype.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Bookmusictype.Entity = null;
					previousValue.BookAlbum.Remove(this);
				}
				this._Bookmusictype.Entity = value;
				if ((value != null))
				{
					value.BookAlbum.Add(this);
					this._Type = value.Id;
				}
				else
				{
					this._Type = default(int);
				}
				this.SendPropertyChanged("Bookmusictype");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ChapterSo__BookA__1A69E950", Storage="_ChapterSong", ThisKey="Id", OtherKey="BookAlbum", DeleteRule="NO ACTION")]
	public EntitySet<ChapterSong> ChapterSong
	{
		get
		{
			return this._ChapterSong;
		}
		set
		{
			this._ChapterSong.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ref__Book__0EF836A4", Storage="_Ref", ThisKey="Id", OtherKey="Book", DeleteRule="NO ACTION")]
	public EntitySet<Ref> Ref
	{
		get
		{
			return this._Ref;
		}
		set
		{
			this._Ref.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AuthorBook(AuthorBook entity)
	{
		this.SendPropertyChanging();
		entity.BookAlbumBookAlbum = this;
	}
	
	private void detach_AuthorBook(AuthorBook entity)
	{
		this.SendPropertyChanging();
		entity.BookAlbumBookAlbum = null;
	}
	
	private void attach_ChapterSong(ChapterSong entity)
	{
		this.SendPropertyChanging();
		entity.BookAlbumBookAlbum = this;
	}
	
	private void detach_ChapterSong(ChapterSong entity)
	{
		this.SendPropertyChanging();
		entity.BookAlbumBookAlbum = null;
	}
	
	private void attach_Ref(Ref entity)
	{
		this.SendPropertyChanging();
		entity.BookAlbum = this;
	}
	
	private void detach_Ref(Ref entity)
	{
		this.SendPropertyChanging();
		entity.BookAlbum = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bookmusictype")]
public partial class Bookmusictype : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Type;
	
	private EntitySet<BookAlbum> _BookAlbum;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public Bookmusictype()
	{
		this._BookAlbum = new EntitySet<BookAlbum>(new Action<BookAlbum>(this.attach_BookAlbum), new Action<BookAlbum>(this.detach_BookAlbum));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BookAlbum__Type__0B27A5C0", Storage="_BookAlbum", ThisKey="Id", OtherKey="Type", DeleteRule="NO ACTION")]
	public EntitySet<BookAlbum> BookAlbum
	{
		get
		{
			return this._BookAlbum;
		}
		set
		{
			this._BookAlbum.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookAlbum(BookAlbum entity)
	{
		this.SendPropertyChanging();
		entity.Bookmusictype = this;
	}
	
	private void detach_BookAlbum(BookAlbum entity)
	{
		this.SendPropertyChanging();
		entity.Bookmusictype = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChapterSong")]
public partial class ChapterSong : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private int _BookAlbum;
	
	private EntitySet<AuthorChapter> _AuthorChapter;
	
	private EntityRef<BookAlbum> _BookAlbumBookAlbum;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBookAlbumChanging(int value);
    partial void OnBookAlbumChanged();
    #endregion
	
	public ChapterSong()
	{
		this._AuthorChapter = new EntitySet<AuthorChapter>(new Action<AuthorChapter>(this.attach_AuthorChapter), new Action<AuthorChapter>(this.detach_AuthorChapter));
		this._BookAlbumBookAlbum = default(EntityRef<BookAlbum>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(300)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookAlbum", DbType="Int NOT NULL")]
	public int BookAlbum
	{
		get
		{
			return this._BookAlbum;
		}
		set
		{
			if ((this._BookAlbum != value))
			{
				if (this._BookAlbumBookAlbum.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookAlbumChanging(value);
				this.SendPropertyChanging();
				this._BookAlbum = value;
				this.SendPropertyChanged("BookAlbum");
				this.OnBookAlbumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorCha__Chapt__1D4655FB", Storage="_AuthorChapter", ThisKey="Id", OtherKey="ChapterSong", DeleteRule="NO ACTION")]
	public EntitySet<AuthorChapter> AuthorChapter
	{
		get
		{
			return this._AuthorChapter;
		}
		set
		{
			this._AuthorChapter.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ChapterSo__BookA__1A69E950", Storage="_BookAlbumBookAlbum", ThisKey="BookAlbum", OtherKey="Id", IsForeignKey=true)]
	public BookAlbum BookAlbumBookAlbum
	{
		get
		{
			return this._BookAlbumBookAlbum.Entity;
		}
		set
		{
			BookAlbum previousValue = this._BookAlbumBookAlbum.Entity;
			if (((previousValue != value) 
						|| (this._BookAlbumBookAlbum.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookAlbumBookAlbum.Entity = null;
					previousValue.ChapterSong.Remove(this);
				}
				this._BookAlbumBookAlbum.Entity = value;
				if ((value != null))
				{
					value.ChapterSong.Add(this);
					this._BookAlbum = value.Id;
				}
				else
				{
					this._BookAlbum = default(int);
				}
				this.SendPropertyChanged("BookAlbumBookAlbum");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AuthorChapter(AuthorChapter entity)
	{
		this.SendPropertyChanging();
		entity.ChapterSongChapterSong = this;
	}
	
	private void detach_AuthorChapter(AuthorChapter entity)
	{
		this.SendPropertyChanging();
		entity.ChapterSongChapterSong = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrossrefSubject")]
public partial class CrossrefSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private EntitySet<ArticleCrossrefSubject> _ArticleCrossrefSubject;
	
	private EntitySet<AuthorSubject> _AuthorSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public CrossrefSubject()
	{
		this._ArticleCrossrefSubject = new EntitySet<ArticleCrossrefSubject>(new Action<ArticleCrossrefSubject>(this.attach_ArticleCrossrefSubject), new Action<ArticleCrossrefSubject>(this.detach_ArticleCrossrefSubject));
		this._AuthorSubject = new EntitySet<AuthorSubject>(new Action<AuthorSubject>(this.attach_AuthorSubject), new Action<AuthorSubject>(this.detach_AuthorSubject));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleCr__Subje__603D47BB", Storage="_ArticleCrossrefSubject", ThisKey="Id", OtherKey="Subject", DeleteRule="NO ACTION")]
	public EntitySet<ArticleCrossrefSubject> ArticleCrossrefSubject
	{
		get
		{
			return this._ArticleCrossrefSubject;
		}
		set
		{
			this._ArticleCrossrefSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Cross__3429BB53", Storage="_AuthorSubject", ThisKey="Id", OtherKey="CrossrefSubject", DeleteRule="NO ACTION")]
	public EntitySet<AuthorSubject> AuthorSubject
	{
		get
		{
			return this._AuthorSubject;
		}
		set
		{
			this._AuthorSubject.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ArticleCrossrefSubject(ArticleCrossrefSubject entity)
	{
		this.SendPropertyChanging();
		entity.CrossrefSubject = this;
	}
	
	private void detach_ArticleCrossrefSubject(ArticleCrossrefSubject entity)
	{
		this.SendPropertyChanging();
		entity.CrossrefSubject = null;
	}
	
	private void attach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.CrossrefSubjectCrossrefSubject = this;
	}
	
	private void detach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.CrossrefSubjectCrossrefSubject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evolang")]
public partial class Evolang : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private int _Year;
	
	private EntitySet<ArticleEvolangSubject> _ArticleEvolangSubject;
	
	private EntitySet<EvolangAuthor> _EvolangAuthor;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    #endregion
	
	public Evolang()
	{
		this._ArticleEvolangSubject = new EntitySet<ArticleEvolangSubject>(new Action<ArticleEvolangSubject>(this.attach_ArticleEvolangSubject), new Action<ArticleEvolangSubject>(this.detach_ArticleEvolangSubject));
		this._EvolangAuthor = new EntitySet<EvolangAuthor>(new Action<EvolangAuthor>(this.attach_EvolangAuthor), new Action<EvolangAuthor>(this.detach_EvolangAuthor));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
	public int Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleEv__Evola__38EE7070", Storage="_ArticleEvolangSubject", ThisKey="Id", OtherKey="Evolang", DeleteRule="NO ACTION")]
	public EntitySet<ArticleEvolangSubject> ArticleEvolangSubject
	{
		get
		{
			return this._ArticleEvolangSubject;
		}
		set
		{
			this._ArticleEvolangSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__EvolangAu__Evola__25DB9BFC", Storage="_EvolangAuthor", ThisKey="Id", OtherKey="Evolang", DeleteRule="NO ACTION")]
	public EntitySet<EvolangAuthor> EvolangAuthor
	{
		get
		{
			return this._EvolangAuthor;
		}
		set
		{
			this._EvolangAuthor.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ArticleEvolangSubject(ArticleEvolangSubject entity)
	{
		this.SendPropertyChanging();
		entity.EvolangEvolang = this;
	}
	
	private void detach_ArticleEvolangSubject(ArticleEvolangSubject entity)
	{
		this.SendPropertyChanging();
		entity.EvolangEvolang = null;
	}
	
	private void attach_EvolangAuthor(EvolangAuthor entity)
	{
		this.SendPropertyChanging();
		entity.EvolangEvolang = this;
	}
	
	private void detach_EvolangAuthor(EvolangAuthor entity)
	{
		this.SendPropertyChanging();
		entity.EvolangEvolang = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvolangAuthor")]
public partial class EvolangAuthor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Evolang;
	
	private int _Author;
	
	private EntityRef<Author> _AuthorAuthor;
	
	private EntityRef<Evolang> _EvolangEvolang;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEvolangChanging(int value);
    partial void OnEvolangChanged();
    partial void OnAuthorChanging(int value);
    partial void OnAuthorChanged();
    #endregion
	
	public EvolangAuthor()
	{
		this._AuthorAuthor = default(EntityRef<Author>);
		this._EvolangEvolang = default(EntityRef<Evolang>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Evolang", DbType="Int NOT NULL")]
	public int Evolang
	{
		get
		{
			return this._Evolang;
		}
		set
		{
			if ((this._Evolang != value))
			{
				if (this._EvolangEvolang.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEvolangChanging(value);
				this.SendPropertyChanging();
				this._Evolang = value;
				this.SendPropertyChanged("Evolang");
				this.OnEvolangChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int NOT NULL")]
	public int Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				if (this._AuthorAuthor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__EvolangAu__Autho__26CFC035", Storage="_AuthorAuthor", ThisKey="Author", OtherKey="Id", IsForeignKey=true)]
	public Author AuthorAuthor
	{
		get
		{
			return this._AuthorAuthor.Entity;
		}
		set
		{
			Author previousValue = this._AuthorAuthor.Entity;
			if (((previousValue != value) 
						|| (this._AuthorAuthor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorAuthor.Entity = null;
					previousValue.EvolangAuthor.Remove(this);
				}
				this._AuthorAuthor.Entity = value;
				if ((value != null))
				{
					value.EvolangAuthor.Add(this);
					this._Author = value.Id;
				}
				else
				{
					this._Author = default(int);
				}
				this.SendPropertyChanged("AuthorAuthor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__EvolangAu__Evola__25DB9BFC", Storage="_EvolangEvolang", ThisKey="Evolang", OtherKey="Id", IsForeignKey=true)]
	public Evolang EvolangEvolang
	{
		get
		{
			return this._EvolangEvolang.Entity;
		}
		set
		{
			Evolang previousValue = this._EvolangEvolang.Entity;
			if (((previousValue != value) 
						|| (this._EvolangEvolang.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EvolangEvolang.Entity = null;
					previousValue.EvolangAuthor.Remove(this);
				}
				this._EvolangEvolang.Entity = value;
				if ((value != null))
				{
					value.EvolangAuthor.Add(this);
					this._Evolang = value.Id;
				}
				else
				{
					this._Evolang = default(int);
				}
				this.SendPropertyChanged("EvolangEvolang");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvolangSubject")]
public partial class EvolangSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private EntitySet<ArticleEvolangSubject> _ArticleEvolangSubject;
	
	private EntitySet<AuthorSubject> _AuthorSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public EvolangSubject()
	{
		this._ArticleEvolangSubject = new EntitySet<ArticleEvolangSubject>(new Action<ArticleEvolangSubject>(this.attach_ArticleEvolangSubject), new Action<ArticleEvolangSubject>(this.detach_ArticleEvolangSubject));
		this._AuthorSubject = new EntitySet<AuthorSubject>(new Action<AuthorSubject>(this.attach_AuthorSubject), new Action<AuthorSubject>(this.detach_AuthorSubject));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleEv__Subje__39E294A9", Storage="_ArticleEvolangSubject", ThisKey="Id", OtherKey="Subject", DeleteRule="NO ACTION")]
	public EntitySet<ArticleEvolangSubject> ArticleEvolangSubject
	{
		get
		{
			return this._ArticleEvolangSubject;
		}
		set
		{
			this._ArticleEvolangSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Evola__361203C5", Storage="_AuthorSubject", ThisKey="Id", OtherKey="EvolangSubject", DeleteRule="NO ACTION")]
	public EntitySet<AuthorSubject> AuthorSubject
	{
		get
		{
			return this._AuthorSubject;
		}
		set
		{
			this._AuthorSubject.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ArticleEvolangSubject(ArticleEvolangSubject entity)
	{
		this.SendPropertyChanging();
		entity.EvolangSubject = this;
	}
	
	private void detach_ArticleEvolangSubject(ArticleEvolangSubject entity)
	{
		this.SendPropertyChanging();
		entity.EvolangSubject = null;
	}
	
	private void attach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.EvolangSubjectEvolangSubject = this;
	}
	
	private void detach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.EvolangSubjectEvolangSubject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal")]
public partial class Journal : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Shortname;
	
	private string _ISSN;
	
	private System.Nullable<int> _Publisher;
	
	private EntitySet<Article> _Article;
	
	private EntityRef<Publisher> _PublisherPublisher;
	
	private EntitySet<Ref> _Ref;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnISSNChanging(string value);
    partial void OnISSNChanged();
    partial void OnPublisherChanging(System.Nullable<int> value);
    partial void OnPublisherChanged();
    #endregion
	
	public Journal()
	{
		this._Article = new EntitySet<Article>(new Action<Article>(this.attach_Article), new Action<Article>(this.detach_Article));
		this._PublisherPublisher = default(EntityRef<Publisher>);
		this._Ref = new EntitySet<Ref>(new Action<Ref>(this.attach_Ref), new Action<Ref>(this.detach_Ref));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(50)")]
	public string Shortname
	{
		get
		{
			return this._Shortname;
		}
		set
		{
			if ((this._Shortname != value))
			{
				this.OnShortnameChanging(value);
				this.SendPropertyChanging();
				this._Shortname = value;
				this.SendPropertyChanged("Shortname");
				this.OnShortnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISSN", DbType="VarChar(15)")]
	public string ISSN
	{
		get
		{
			return this._ISSN;
		}
		set
		{
			if ((this._ISSN != value))
			{
				this.OnISSNChanging(value);
				this.SendPropertyChanging();
				this._ISSN = value;
				this.SendPropertyChanged("ISSN");
				this.OnISSNChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="Int")]
	public System.Nullable<int> Publisher
	{
		get
		{
			return this._Publisher;
		}
		set
		{
			if ((this._Publisher != value))
			{
				if (this._PublisherPublisher.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPublisherChanging(value);
				this.SendPropertyChanging();
				this._Publisher = value;
				this.SendPropertyChanged("Publisher");
				this.OnPublisherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Journal__5006DFF2", Storage="_Article", ThisKey="Id", OtherKey="Journal", DeleteRule="NO ACTION")]
	public EntitySet<Article> Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			this._Article.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Journal__Publish__4B422AD5", Storage="_PublisherPublisher", ThisKey="Publisher", OtherKey="Id", IsForeignKey=true)]
	public Publisher PublisherPublisher
	{
		get
		{
			return this._PublisherPublisher.Entity;
		}
		set
		{
			Publisher previousValue = this._PublisherPublisher.Entity;
			if (((previousValue != value) 
						|| (this._PublisherPublisher.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PublisherPublisher.Entity = null;
					previousValue.Journal.Remove(this);
				}
				this._PublisherPublisher.Entity = value;
				if ((value != null))
				{
					value.Journal.Add(this);
					this._Publisher = value.Id;
				}
				else
				{
					this._Publisher = default(Nullable<int>);
				}
				this.SendPropertyChanged("PublisherPublisher");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ref__Journal__0FEC5ADD", Storage="_Ref", ThisKey="Id", OtherKey="Journal", DeleteRule="NO ACTION")]
	public EntitySet<Ref> Ref
	{
		get
		{
			return this._Ref;
		}
		set
		{
			this._Ref.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.JournalJournal = this;
	}
	
	private void detach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.JournalJournal = null;
	}
	
	private void attach_Ref(Ref entity)
	{
		this.SendPropertyChanging();
		entity.JournalJournal = this;
	}
	
	private void detach_Ref(Ref entity)
	{
		this.SendPropertyChanging();
		entity.JournalJournal = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publisher")]
public partial class Publisher : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _URL;
	
	private string _Location;
	
	private EntitySet<BookAlbum> _BookAlbum;
	
	private EntitySet<Journal> _Journal;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    #endregion
	
	public Publisher()
	{
		this._BookAlbum = new EntitySet<BookAlbum>(new Action<BookAlbum>(this.attach_BookAlbum), new Action<BookAlbum>(this.detach_BookAlbum));
		this._Journal = new EntitySet<Journal>(new Action<Journal>(this.attach_Journal), new Action<Journal>(this.detach_Journal));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(100)")]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
	public string Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BookAlbum__Publi__093F5D4E", Storage="_BookAlbum", ThisKey="Id", OtherKey="Publisher", DeleteRule="NO ACTION")]
	public EntitySet<BookAlbum> BookAlbum
	{
		get
		{
			return this._BookAlbum;
		}
		set
		{
			this._BookAlbum.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Journal__Publish__4B422AD5", Storage="_Journal", ThisKey="Id", OtherKey="Publisher", DeleteRule="NO ACTION")]
	public EntitySet<Journal> Journal
	{
		get
		{
			return this._Journal;
		}
		set
		{
			this._Journal.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BookAlbum(BookAlbum entity)
	{
		this.SendPropertyChanging();
		entity.PublisherPublisher = this;
	}
	
	private void detach_BookAlbum(BookAlbum entity)
	{
		this.SendPropertyChanging();
		entity.PublisherPublisher = null;
	}
	
	private void attach_Journal(Journal entity)
	{
		this.SendPropertyChanging();
		entity.PublisherPublisher = this;
	}
	
	private void detach_Journal(Journal entity)
	{
		this.SendPropertyChanging();
		entity.PublisherPublisher = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PubmedSubject")]
public partial class PubmedSubject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private EntitySet<ArticlePubmedSubject> _ArticlePubmedSubject;
	
	private EntitySet<AuthorSubject> _AuthorSubject;
	
	private EntitySet<PubmedSubjectrelation> _PubmedSubjectrelation;
	
	private EntitySet<PubmedSubjectrelation> @__PubmedSub__Upper__68D28DBC;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public PubmedSubject()
	{
		this._ArticlePubmedSubject = new EntitySet<ArticlePubmedSubject>(new Action<ArticlePubmedSubject>(this.attach_ArticlePubmedSubject), new Action<ArticlePubmedSubject>(this.detach_ArticlePubmedSubject));
		this._AuthorSubject = new EntitySet<AuthorSubject>(new Action<AuthorSubject>(this.attach_AuthorSubject), new Action<AuthorSubject>(this.detach_AuthorSubject));
		this._PubmedSubjectrelation = new EntitySet<PubmedSubjectrelation>(new Action<PubmedSubjectrelation>(this.attach_PubmedSubjectrelation), new Action<PubmedSubjectrelation>(this.detach_PubmedSubjectrelation));
		this.@__PubmedSub__Upper__68D28DBC = new EntitySet<PubmedSubjectrelation>(new Action<PubmedSubjectrelation>(this.attach__PubmedSub__Upper__68D28DBC), new Action<PubmedSubjectrelation>(this.detach__PubmedSub__Upper__68D28DBC));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticlePu__Subje__65F62111", Storage="_ArticlePubmedSubject", ThisKey="Id", OtherKey="Subject", DeleteRule="NO ACTION")]
	public EntitySet<ArticlePubmedSubject> ArticlePubmedSubject
	{
		get
		{
			return this._ArticlePubmedSubject;
		}
		set
		{
			this._ArticlePubmedSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Pubme__351DDF8C", Storage="_AuthorSubject", ThisKey="Id", OtherKey="PubmedSubject", DeleteRule="NO ACTION")]
	public EntitySet<AuthorSubject> AuthorSubject
	{
		get
		{
			return this._AuthorSubject;
		}
		set
		{
			this._AuthorSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__PubmedSub__Lower__69C6B1F5", Storage="_PubmedSubjectrelation", ThisKey="Id", OtherKey="Lower", DeleteRule="NO ACTION")]
	public EntitySet<PubmedSubjectrelation> PubmedSubjectrelation
	{
		get
		{
			return this._PubmedSubjectrelation;
		}
		set
		{
			this._PubmedSubjectrelation.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__PubmedSub__Upper__68D28DBC", Storage="__PubmedSub__Upper__68D28DBC", ThisKey="Id", OtherKey="Upper", DeleteRule="NO ACTION")]
	public EntitySet<PubmedSubjectrelation> _PubmedSub__Upper__68D28DBC
	{
		get
		{
			return this.@__PubmedSub__Upper__68D28DBC;
		}
		set
		{
			this.@__PubmedSub__Upper__68D28DBC.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ArticlePubmedSubject(ArticlePubmedSubject entity)
	{
		this.SendPropertyChanging();
		entity.PubmedSubject = this;
	}
	
	private void detach_ArticlePubmedSubject(ArticlePubmedSubject entity)
	{
		this.SendPropertyChanging();
		entity.PubmedSubject = null;
	}
	
	private void attach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.PubmedSubjectPubmedSubject = this;
	}
	
	private void detach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.PubmedSubjectPubmedSubject = null;
	}
	
	private void attach_PubmedSubjectrelation(PubmedSubjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.PubmedSubject = this;
	}
	
	private void detach_PubmedSubjectrelation(PubmedSubjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.PubmedSubject = null;
	}
	
	private void attach__PubmedSub__Upper__68D28DBC(PubmedSubjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.UpperPubmedSubject = this;
	}
	
	private void detach__PubmedSub__Upper__68D28DBC(PubmedSubjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.UpperPubmedSubject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PubmedSubjectrelation")]
public partial class PubmedSubjectrelation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _Upper;
	
	private int _Lower;
	
	private EntityRef<PubmedSubject> _PubmedSubject;
	
	private EntityRef<PubmedSubject> _UpperPubmedSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUpperChanging(int value);
    partial void OnUpperChanged();
    partial void OnLowerChanging(int value);
    partial void OnLowerChanged();
    #endregion
	
	public PubmedSubjectrelation()
	{
		this._PubmedSubject = default(EntityRef<PubmedSubject>);
		this._UpperPubmedSubject = default(EntityRef<PubmedSubject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper", DbType="Int NOT NULL")]
	public int Upper
	{
		get
		{
			return this._Upper;
		}
		set
		{
			if ((this._Upper != value))
			{
				if (this._UpperPubmedSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUpperChanging(value);
				this.SendPropertyChanging();
				this._Upper = value;
				this.SendPropertyChanged("Upper");
				this.OnUpperChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower", DbType="Int NOT NULL")]
	public int Lower
	{
		get
		{
			return this._Lower;
		}
		set
		{
			if ((this._Lower != value))
			{
				if (this._PubmedSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLowerChanging(value);
				this.SendPropertyChanging();
				this._Lower = value;
				this.SendPropertyChanged("Lower");
				this.OnLowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__PubmedSub__Lower__69C6B1F5", Storage="_PubmedSubject", ThisKey="Lower", OtherKey="Id", IsForeignKey=true)]
	public PubmedSubject PubmedSubject
	{
		get
		{
			return this._PubmedSubject.Entity;
		}
		set
		{
			PubmedSubject previousValue = this._PubmedSubject.Entity;
			if (((previousValue != value) 
						|| (this._PubmedSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PubmedSubject.Entity = null;
					previousValue.PubmedSubjectrelation.Remove(this);
				}
				this._PubmedSubject.Entity = value;
				if ((value != null))
				{
					value.PubmedSubjectrelation.Add(this);
					this._Lower = value.Id;
				}
				else
				{
					this._Lower = default(int);
				}
				this.SendPropertyChanged("PubmedSubject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__PubmedSub__Upper__68D28DBC", Storage="_UpperPubmedSubject", ThisKey="Upper", OtherKey="Id", IsForeignKey=true)]
	public PubmedSubject UpperPubmedSubject
	{
		get
		{
			return this._UpperPubmedSubject.Entity;
		}
		set
		{
			PubmedSubject previousValue = this._UpperPubmedSubject.Entity;
			if (((previousValue != value) 
						|| (this._UpperPubmedSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UpperPubmedSubject.Entity = null;
					previousValue._PubmedSub__Upper__68D28DBC.Remove(this);
				}
				this._UpperPubmedSubject.Entity = value;
				if ((value != null))
				{
					value._PubmedSub__Upper__68D28DBC.Add(this);
					this._Upper = value.Id;
				}
				else
				{
					this._Upper = default(int);
				}
				this.SendPropertyChanged("UpperPubmedSubject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref")]
public partial class Ref : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _Article;
	
	private System.Nullable<int> _Book;
	
	private string _Author;
	
	private System.Nullable<int> _Year;
	
	private string _Title;
	
	private System.Nullable<int> _Journal;
	
	private string _Volume;
	
	private string _Pages;
	
	private string _DOI;
	
	private EntitySet<ArticleReference> _ArticleReference;
	
	private EntityRef<Article> _ArticleArticle;
	
	private EntityRef<BookAlbum> _BookAlbum;
	
	private EntityRef<Journal> _JournalJournal;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleChanging(System.Nullable<int> value);
    partial void OnArticleChanged();
    partial void OnBookChanging(System.Nullable<int> value);
    partial void OnBookChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnJournalChanging(System.Nullable<int> value);
    partial void OnJournalChanged();
    partial void OnVolumeChanging(string value);
    partial void OnVolumeChanged();
    partial void OnPagesChanging(string value);
    partial void OnPagesChanged();
    partial void OnDOIChanging(string value);
    partial void OnDOIChanged();
    #endregion
	
	public Ref()
	{
		this._ArticleReference = new EntitySet<ArticleReference>(new Action<ArticleReference>(this.attach_ArticleReference), new Action<ArticleReference>(this.detach_ArticleReference));
		this._ArticleArticle = default(EntityRef<Article>);
		this._BookAlbum = default(EntityRef<BookAlbum>);
		this._JournalJournal = default(EntityRef<Journal>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="Int")]
	public System.Nullable<int> Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			if ((this._Article != value))
			{
				if (this._ArticleArticle.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnArticleChanging(value);
				this.SendPropertyChanging();
				this._Article = value;
				this.SendPropertyChanged("Article");
				this.OnArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book", DbType="Int")]
	public System.Nullable<int> Book
	{
		get
		{
			return this._Book;
		}
		set
		{
			if ((this._Book != value))
			{
				if (this._BookAlbum.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookChanging(value);
				this.SendPropertyChanging();
				this._Book = value;
				this.SendPropertyChanged("Book");
				this.OnBookChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(40)")]
	public string Author
	{
		get
		{
			return this._Author;
		}
		set
		{
			if ((this._Author != value))
			{
				this.OnAuthorChanging(value);
				this.SendPropertyChanging();
				this._Author = value;
				this.SendPropertyChanged("Author");
				this.OnAuthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
	public System.Nullable<int> Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(300)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Journal", DbType="Int")]
	public System.Nullable<int> Journal
	{
		get
		{
			return this._Journal;
		}
		set
		{
			if ((this._Journal != value))
			{
				if (this._JournalJournal.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnJournalChanging(value);
				this.SendPropertyChanging();
				this._Journal = value;
				this.SendPropertyChanged("Journal");
				this.OnJournalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="VarChar(10)")]
	public string Volume
	{
		get
		{
			return this._Volume;
		}
		set
		{
			if ((this._Volume != value))
			{
				this.OnVolumeChanging(value);
				this.SendPropertyChanging();
				this._Volume = value;
				this.SendPropertyChanged("Volume");
				this.OnVolumeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", DbType="VarChar(15)")]
	public string Pages
	{
		get
		{
			return this._Pages;
		}
		set
		{
			if ((this._Pages != value))
			{
				this.OnPagesChanging(value);
				this.SendPropertyChanging();
				this._Pages = value;
				this.SendPropertyChanged("Pages");
				this.OnPagesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOI", DbType="VarChar(40)")]
	public string DOI
	{
		get
		{
			return this._DOI;
		}
		set
		{
			if ((this._DOI != value))
			{
				this.OnDOIChanging(value);
				this.SendPropertyChanging();
				this._DOI = value;
				this.SendPropertyChanged("DOI");
				this.OnDOIChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__ArticleRe__Refer__13BCEBC1", Storage="_ArticleReference", ThisKey="Id", OtherKey="Reference", DeleteRule="NO ACTION")]
	public EntitySet<ArticleReference> ArticleReference
	{
		get
		{
			return this._ArticleReference;
		}
		set
		{
			this._ArticleReference.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ref__Article__0E04126B", Storage="_ArticleArticle", ThisKey="Article", OtherKey="Id", IsForeignKey=true)]
	public Article ArticleArticle
	{
		get
		{
			return this._ArticleArticle.Entity;
		}
		set
		{
			Article previousValue = this._ArticleArticle.Entity;
			if (((previousValue != value) 
						|| (this._ArticleArticle.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ArticleArticle.Entity = null;
					previousValue.Ref.Remove(this);
				}
				this._ArticleArticle.Entity = value;
				if ((value != null))
				{
					value.Ref.Add(this);
					this._Article = value.Id;
				}
				else
				{
					this._Article = default(Nullable<int>);
				}
				this.SendPropertyChanged("ArticleArticle");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ref__Book__0EF836A4", Storage="_BookAlbum", ThisKey="Book", OtherKey="Id", IsForeignKey=true)]
	public BookAlbum BookAlbum
	{
		get
		{
			return this._BookAlbum.Entity;
		}
		set
		{
			BookAlbum previousValue = this._BookAlbum.Entity;
			if (((previousValue != value) 
						|| (this._BookAlbum.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookAlbum.Entity = null;
					previousValue.Ref.Remove(this);
				}
				this._BookAlbum.Entity = value;
				if ((value != null))
				{
					value.Ref.Add(this);
					this._Book = value.Id;
				}
				else
				{
					this._Book = default(Nullable<int>);
				}
				this.SendPropertyChanged("BookAlbum");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Ref__Journal__0FEC5ADD", Storage="_JournalJournal", ThisKey="Journal", OtherKey="Id", IsForeignKey=true)]
	public Journal JournalJournal
	{
		get
		{
			return this._JournalJournal.Entity;
		}
		set
		{
			Journal previousValue = this._JournalJournal.Entity;
			if (((previousValue != value) 
						|| (this._JournalJournal.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._JournalJournal.Entity = null;
					previousValue.Ref.Remove(this);
				}
				this._JournalJournal.Entity = value;
				if ((value != null))
				{
					value.Ref.Add(this);
					this._Journal = value.Id;
				}
				else
				{
					this._Journal = default(Nullable<int>);
				}
				this.SendPropertyChanged("JournalJournal");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ArticleReference(ArticleReference entity)
	{
		this.SendPropertyChanging();
		entity.Ref = this;
	}
	
	private void detach_ArticleReference(ArticleReference entity)
	{
		this.SendPropertyChanging();
		entity.Ref = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Id;
	
	private string _Name;
	
	private EntitySet<Article> _Article;
	
	private EntitySet<Article> @__Article__Subj2__51EF2864;
	
	private EntitySet<Article> @__Article__Subj3__52E34C9D;
	
	private EntitySet<AuthorSubject> _AuthorSubject;
	
	private EntitySet<BookAlbum> _BookAlbum;
	
	private EntitySet<Subjectrelation> _Subjectrelation;
	
	private EntitySet<Subjectrelation> @__Subjectre__Upper__59904A2C;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public Subject()
	{
		this._Article = new EntitySet<Article>(new Action<Article>(this.attach_Article), new Action<Article>(this.detach_Article));
		this.@__Article__Subj2__51EF2864 = new EntitySet<Article>(new Action<Article>(this.attach__Article__Subj2__51EF2864), new Action<Article>(this.detach__Article__Subj2__51EF2864));
		this.@__Article__Subj3__52E34C9D = new EntitySet<Article>(new Action<Article>(this.attach__Article__Subj3__52E34C9D), new Action<Article>(this.detach__Article__Subj3__52E34C9D));
		this._AuthorSubject = new EntitySet<AuthorSubject>(new Action<AuthorSubject>(this.attach_AuthorSubject), new Action<AuthorSubject>(this.detach_AuthorSubject));
		this._BookAlbum = new EntitySet<BookAlbum>(new Action<BookAlbum>(this.attach_BookAlbum), new Action<BookAlbum>(this.detach_BookAlbum));
		this._Subjectrelation = new EntitySet<Subjectrelation>(new Action<Subjectrelation>(this.attach_Subjectrelation), new Action<Subjectrelation>(this.detach_Subjectrelation));
		this.@__Subjectre__Upper__59904A2C = new EntitySet<Subjectrelation>(new Action<Subjectrelation>(this.attach__Subjectre__Upper__59904A2C), new Action<Subjectrelation>(this.detach__Subjectre__Upper__59904A2C));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Subj1__50FB042B", Storage="_Article", ThisKey="Id", OtherKey="Subj1", DeleteRule="NO ACTION")]
	public EntitySet<Article> Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			this._Article.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Subj2__51EF2864", Storage="__Article__Subj2__51EF2864", ThisKey="Id", OtherKey="Subj2", DeleteRule="NO ACTION")]
	public EntitySet<Article> _Article__Subj2__51EF2864
	{
		get
		{
			return this.@__Article__Subj2__51EF2864;
		}
		set
		{
			this.@__Article__Subj2__51EF2864.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Article__Subj3__52E34C9D", Storage="__Article__Subj3__52E34C9D", ThisKey="Id", OtherKey="Subj3", DeleteRule="NO ACTION")]
	public EntitySet<Article> _Article__Subj3__52E34C9D
	{
		get
		{
			return this.@__Article__Subj3__52E34C9D;
		}
		set
		{
			this.@__Article__Subj3__52E34C9D.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__AuthorSub__Subje__3335971A", Storage="_AuthorSubject", ThisKey="Id", OtherKey="Subject", DeleteRule="NO ACTION")]
	public EntitySet<AuthorSubject> AuthorSubject
	{
		get
		{
			return this._AuthorSubject;
		}
		set
		{
			this._AuthorSubject.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__BookAlbum__Subje__0A338187", Storage="_BookAlbum", ThisKey="Id", OtherKey="Subject", DeleteRule="NO ACTION")]
	public EntitySet<BookAlbum> BookAlbum
	{
		get
		{
			return this._BookAlbum;
		}
		set
		{
			this._BookAlbum.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Subjectre__Lower__5A846E65", Storage="_Subjectrelation", ThisKey="Id", OtherKey="Lower", DeleteRule="NO ACTION")]
	public EntitySet<Subjectrelation> Subjectrelation
	{
		get
		{
			return this._Subjectrelation;
		}
		set
		{
			this._Subjectrelation.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Subjectre__Upper__59904A2C", Storage="__Subjectre__Upper__59904A2C", ThisKey="Id", OtherKey="Upper", DeleteRule="NO ACTION")]
	public EntitySet<Subjectrelation> _Subjectre__Upper__59904A2C
	{
		get
		{
			return this.@__Subjectre__Upper__59904A2C;
		}
		set
		{
			this.@__Subjectre__Upper__59904A2C.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.Subject = this;
	}
	
	private void detach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.Subject = null;
	}
	
	private void attach__Article__Subj2__51EF2864(Article entity)
	{
		this.SendPropertyChanging();
		entity.Subj2Subject = this;
	}
	
	private void detach__Article__Subj2__51EF2864(Article entity)
	{
		this.SendPropertyChanging();
		entity.Subj2Subject = null;
	}
	
	private void attach__Article__Subj3__52E34C9D(Article entity)
	{
		this.SendPropertyChanging();
		entity.Subj3Subject = this;
	}
	
	private void detach__Article__Subj3__52E34C9D(Article entity)
	{
		this.SendPropertyChanging();
		entity.Subj3Subject = null;
	}
	
	private void attach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.SubjectSubject = this;
	}
	
	private void detach_AuthorSubject(AuthorSubject entity)
	{
		this.SendPropertyChanging();
		entity.SubjectSubject = null;
	}
	
	private void attach_BookAlbum(BookAlbum entity)
	{
		this.SendPropertyChanging();
		entity.SubjectSubject = this;
	}
	
	private void detach_BookAlbum(BookAlbum entity)
	{
		this.SendPropertyChanging();
		entity.SubjectSubject = null;
	}
	
	private void attach_Subjectrelation(Subjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.Subject = this;
	}
	
	private void detach_Subjectrelation(Subjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.Subject = null;
	}
	
	private void attach__Subjectre__Upper__59904A2C(Subjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.UpperSubject = this;
	}
	
	private void detach__Subjectre__Upper__59904A2C(Subjectrelation entity)
	{
		this.SendPropertyChanging();
		entity.UpperSubject = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subjectrelation")]
public partial class Subjectrelation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Upper;
	
	private string _Lower;
	
	private EntityRef<Subject> _Subject;
	
	private EntityRef<Subject> _UpperSubject;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUpperChanging(string value);
    partial void OnUpperChanged();
    partial void OnLowerChanging(string value);
    partial void OnLowerChanged();
    #endregion
	
	public Subjectrelation()
	{
		this._Subject = default(EntityRef<Subject>);
		this._UpperSubject = default(EntityRef<Subject>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upper", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
	public string Upper
	{
		get
		{
			return this._Upper;
		}
		set
		{
			if ((this._Upper != value))
			{
				if (this._UpperSubject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUpperChanging(value);
				this.SendPropertyChanging();
				this._Upper = value;
				this.SendPropertyChanged("Upper");
				this.OnUpperChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lower", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
	public string Lower
	{
		get
		{
			return this._Lower;
		}
		set
		{
			if ((this._Lower != value))
			{
				if (this._Subject.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLowerChanging(value);
				this.SendPropertyChanging();
				this._Lower = value;
				this.SendPropertyChanged("Lower");
				this.OnLowerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Subjectre__Lower__5A846E65", Storage="_Subject", ThisKey="Lower", OtherKey="Id", IsForeignKey=true)]
	public Subject Subject
	{
		get
		{
			return this._Subject.Entity;
		}
		set
		{
			Subject previousValue = this._Subject.Entity;
			if (((previousValue != value) 
						|| (this._Subject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Subject.Entity = null;
					previousValue.Subjectrelation.Remove(this);
				}
				this._Subject.Entity = value;
				if ((value != null))
				{
					value.Subjectrelation.Add(this);
					this._Lower = value.Id;
				}
				else
				{
					this._Lower = default(string);
				}
				this.SendPropertyChanged("Subject");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Subjectre__Upper__59904A2C", Storage="_UpperSubject", ThisKey="Upper", OtherKey="Id", IsForeignKey=true)]
	public Subject UpperSubject
	{
		get
		{
			return this._UpperSubject.Entity;
		}
		set
		{
			Subject previousValue = this._UpperSubject.Entity;
			if (((previousValue != value) 
						|| (this._UpperSubject.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UpperSubject.Entity = null;
					previousValue._Subjectre__Upper__59904A2C.Remove(this);
				}
				this._UpperSubject.Entity = value;
				if ((value != null))
				{
					value._Subjectre__Upper__59904A2C.Add(this);
					this._Upper = value.Id;
				}
				else
				{
					this._Upper = default(string);
				}
				this.SendPropertyChanged("UpperSubject");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
